{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../core/utils/throw_parse_error.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"throwParseError"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"parse_definition"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var throwParseError;module.import('../../core/utils/throw_parse_error.js',{\"default\":function(v){throwParseError=v}});\n\n\nvar fieldDefinitionPattern = Match.ObjectIncluding({\n\tindex: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence and validity of the \"indexes\" property.\n\tif (definition.indexes !== undefined) {\n\t\t_.each(definition.indexes, function (index, indexName) {\n\t\t\tif (!Match.test(index, Object)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'index': indexName\n\t\t\t\t}, 'Indexes definition has to be an object']);\n\t\t\t}\n\t\t\tindex = {\n\t\t\t\tfields: index.fields,\n\t\t\t\toptions: index.options || {}\n\t\t\t};\n\t\t\tindex.options.name = index.options.name || indexName;\n\t\t\tparsedDefinition.indexes[indexName] = index;\n\t\t});\n\t}\n\n\tif (definition.fields !== undefined) {\n\t\t_.each(definition.fields, function (fieldDefinition, fieldName) {\n\t\t\t// Stop if a field definition does not contain index information.\n\t\t\tif (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Prepare an index definition.\n\t\t\tvar indexDefinition = {\n\t\t\t\tfields: {},\n\t\t\t\toptions: {\n\t\t\t\t\tname: fieldName\n\t\t\t\t}\n\t\t\t};\n\t\t\tindexDefinition.fields[fieldName] = fieldDefinition.index;\n\t\t\tparsedDefinition.indexes[fieldName] = indexDefinition;\n\t\t});\n\t}\n};\n\nmodule.export(\"default\",exports.default=(onParseDefinition));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,eAAP,MAA4B,uCAA5B;;AAEA,IAAM,yBAAyB,MAAM,eAAN,CAAsB;AACpD,QAAO,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,MAAnB;AAD6C,CAAtB,CAA/B;;AAIA,SAAS,iBAAT,CAA2B,gBAA3B,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE;;AAEnE,KAAI,WAAW,OAAX,KAAuB,SAA3B,EAAsC;AACrC,IAAE,IAAF,CAAO,WAAW,OAAlB,EAA2B,UAAC,KAAD,EAAQ,SAAR,EAAsB;AAChD,OAAI,CAAC,MAAM,IAAN,CAAW,KAAX,EAAkB,MAAlB,CAAL,EAAgC;AAC/B,oBAAgB,CAAC;AACf,cAAS;AADM,KAAD,EAEZ;AACF,cAAS;AADP,KAFY,EAKf,wCALe,CAAhB;AAOA;AACD,WAAQ;AACP,YAAQ,MAAM,MADP;AAEP,aAAS,MAAM,OAAN,IAAiB;AAFnB,IAAR;AAIA,SAAM,OAAN,CAAc,IAAd,GAAqB,MAAM,OAAN,CAAc,IAAd,IAAsB,SAA3C;AACA,oBAAiB,OAAjB,CAAyB,SAAzB,IAAsC,KAAtC;AACA,GAhBD;AAiBA;;AAED,KAAI,WAAW,MAAX,KAAsB,SAA1B,EAAqC;AACpC,IAAE,IAAF,CAAO,WAAW,MAAlB,EAA0B,UAAC,eAAD,EAAkB,SAAlB,EAAgC;;AAEzD,OAAI,CAAC,MAAM,IAAN,CAAW,eAAX,EAA4B,sBAA5B,CAAL,EAA0D;AACzD;AACA;;AAED,OAAI,kBAAkB;AACrB,YAAQ,EADa;AAErB,aAAS;AACR,WAAM;AADE;AAFY,IAAtB;AAMA,mBAAgB,MAAhB,CAAuB,SAAvB,IAAoC,gBAAgB,KAApD;AACA,oBAAiB,OAAjB,CAAyB,SAAzB,IAAsC,eAAtC;AACA,GAdD;AAeA;AACD;;AAED,eAAe,iBAAf","file":"/packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js.map","sourcesContent":["import _ from 'lodash';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\n\nconst fieldDefinitionPattern = Match.ObjectIncluding({\n\tindex: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence and validity of the \"indexes\" property.\n\tif (definition.indexes !== undefined) {\n\t\t_.each(definition.indexes, (index, indexName) => {\n\t\t\tif (!Match.test(index, Object)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'index': indexName\n\t\t\t\t\t},\n\t\t\t\t\t'Indexes definition has to be an object'\n\t\t\t\t]);\n\t\t\t}\n\t\t\tindex = {\n\t\t\t\tfields: index.fields,\n\t\t\t\toptions: index.options || {}\n\t\t\t};\n\t\t\tindex.options.name = index.options.name || indexName;\n\t\t\tparsedDefinition.indexes[indexName] = index;\n\t\t});\n\t}\n\n\tif (definition.fields !== undefined) {\n\t\t_.each(definition.fields, (fieldDefinition, fieldName) => {\n\t\t\t// Stop if a field definition does not contain index information.\n\t\t\tif (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Prepare an index definition.\n\t\t\tlet indexDefinition = {\n\t\t\t\tfields: {},\n\t\t\t\toptions: {\n\t\t\t\t\tname: fieldName\n\t\t\t\t}\n\t\t\t};\n\t\t\tindexDefinition.fields[fieldName] = fieldDefinition.index;\n\t\t\tparsedDefinition.indexes[fieldName] = indexDefinition;\n\t\t});\n\t}\n};\n\nexport default onParseDefinition;"]},"hash":"6e285b65508715cdf7ed79e59f275b60dc2971fb"}
