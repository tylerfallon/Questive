{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../../../core/class.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AstroClass"}]},{"source":"./document_insert.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"documentInsert"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"class_insert"},"ignored":false,"code":"var AstroClass;module.import('../../../core/class.js',{\"default\":function(v){AstroClass=v}});var documentInsert;module.import('./document_insert.js',{\"default\":function(v){documentInsert=v}});\n\n\nfunction classInsert() {\n  var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var className = args.className;\n  var rawDoc = args.rawDoc;\n  var stopOnFirstError = args.stopOnFirstError;\n  var fields = args.fields;\n  var _args$simulation = args.simulation;\n  var simulation = _args$simulation === undefined ? true : _args$simulation;\n  var _args$trusted = args.trusted;\n  var trusted = _args$trusted === undefined ? false : _args$trusted;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = AstroClass.get(className);\n  // Create a new document.\n  var doc = new Class(rawDoc);\n\n  // Insert a document.\n  return documentInsert({\n    doc: doc,\n    stopOnFirstError: stopOnFirstError,\n    simulation: simulation,\n    trusted: trusted\n  });\n};\n\nmodule.export(\"default\",exports.default=(classInsert));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js"],"names":[],"mappings":"AAAA,OAAO,UAAP,MAAuB,wBAAvB;AACA,OAAO,cAAP,MAA2B,sBAA3B;;AAEA,SAAS,WAAT,GAAgC;AAAA,MAAX,IAAW,yDAAJ,EAAI;AAAA,MAE5B,SAF4B,GAQ1B,IAR0B,CAE5B,SAF4B;AAAA,MAG5B,MAH4B,GAQ1B,IAR0B,CAG5B,MAH4B;AAAA,MAI5B,gBAJ4B,GAQ1B,IAR0B,CAI5B,gBAJ4B;AAAA,MAK5B,MAL4B,GAQ1B,IAR0B,CAK5B,MAL4B;AAAA,yBAQ1B,IAR0B,CAM5B,UAN4B;AAAA,MAM5B,UAN4B,oCAMf,IANe;AAAA,sBAQ1B,IAR0B,CAO5B,OAP4B;AAAA,MAO5B,OAP4B,iCAOlB,KAPkB;;;;;AAY9B,MAAI,CAAC,UAAD,IAAe,CAAC,OAAO,QAA3B,EAAqC;AACnC;AACD;;AAED,MAAM,QAAQ,WAAW,GAAX,CAAe,SAAf,CAAd;;AAEA,MAAM,MAAM,IAAI,KAAJ,CAAU,MAAV,CAAZ;;;AAGA,SAAO,eAAe;AACpB,YADoB;AAEpB,sCAFoB;AAGpB,0BAHoB;AAIpB;AAJoB,GAAf,CAAP;AAMD;;AAED,eAAe,WAAf","file":"/packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js.map","sourcesContent":["import AstroClass from '../../../core/class.js';\nimport documentInsert from './document_insert.js';\n\nfunction classInsert(args = {}) {\n  const {\n    className,\n    rawDoc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false,\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  const Class = AstroClass.get(className);\n  // Create a new document.\n  const doc = new Class(rawDoc);\n\n  // Insert a document.\n  return documentInsert({\n    doc,\n    stopOnFirstError,\n    simulation,\n    trusted,\n  });\n};\n\nexport default classInsert;"]},"hash":"f9039dbf9b134477236908940afe83a0da1b6f5a"}
