{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/modules/fields/get.js","filenameRelative":"/packages/jagi:astronomy/test/modules/fields/get.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/modules/fields/get.js.map","sourceFileName":"/packages/jagi:astronomy/test/modules/fields/get.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"get"},"ignored":false,"code":"Tinytest.add('Modules - Fields - Get', function (test) {\n  reset();\n\n  var GetClassNested = Astro.Class.create({\n    name: 'GetClassNested',\n    fields: {\n      string: {\n        type: String\n      }\n    }\n  });\n\n  // Define simple class to work with.\n  var GetClass = Astro.Class.create({\n    name: 'GetClass',\n    fields: {\n      one: {\n        type: GetClassNested\n      },\n      many: {\n        type: [GetClassNested]\n      }\n    }\n  });\n\n  var doc = new GetClass({\n    one: new GetClassNested({\n      string: 'abc'\n    }),\n    many: [new GetClassNested({\n      string: 'abc'\n    })]\n  });\n\n  test.equal(doc.get('one'), new GetClassNested({\n    string: 'abc'\n  }), 'Wrong value get from the \"one\" field');\n  test.equal(doc.get('one.string'), 'abc', 'Wrong value get from the \"one.string\" field');\n  test.equal(doc.get('many'), [new GetClassNested({\n    string: 'abc'\n  })], 'Wrong value get from the \"many\" field');\n  test.equal(doc.get('many.0'), new GetClassNested({\n    string: 'abc'\n  }), 'Wrong value get from the \"many.0\" field');\n  test.equal(doc.get('many.0.string'), 'abc', 'Wrong value get from the \"many.0.string\" field');\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/modules/fields/get.js"],"names":[],"mappings":"AAAA,SAAS,GAAT,CAAa,wBAAb,EAAuC,UAAS,IAAT,EAAe;AACpD;;AAEA,MAAI,iBAAiB,MAAM,KAAN,CAAY,MAAZ,CAAmB;AACtC,UAAM,gBADgC;AAEtC,YAAQ;AACN,cAAQ;AACN,cAAM;AADA;AADF;AAF8B,GAAnB,CAArB;;;AAUA,MAAI,WAAW,MAAM,KAAN,CAAY,MAAZ,CAAmB;AAChC,UAAM,UAD0B;AAEhC,YAAQ;AACN,WAAK;AACH,cAAM;AADH,OADC;AAIN,YAAM;AACJ,cAAM,CAAC,cAAD;AADF;AAJA;AAFwB,GAAnB,CAAf;;AAYA,MAAI,MAAM,IAAI,QAAJ,CAAa;AACrB,SAAK,IAAI,cAAJ,CAAmB;AACtB,cAAQ;AADc,KAAnB,CADgB;AAIrB,UAAM,CACJ,IAAI,cAAJ,CAAmB;AACjB,cAAQ;AADS,KAAnB,CADI;AAJe,GAAb,CAAV;;AAWA,OAAK,KAAL,CAAW,IAAI,GAAJ,CAAQ,KAAR,CAAX,EAA2B,IAAI,cAAJ,CAAmB;AAC1C,YAAQ;AADkC,GAAnB,CAA3B,EAGE,sCAHF;AAKA,OAAK,KAAL,CAAW,IAAI,GAAJ,CAAQ,YAAR,CAAX,EAAkC,KAAlC,EACE,6CADF;AAGA,OAAK,KAAL,CAAW,IAAI,GAAJ,CAAQ,MAAR,CAAX,EAA4B,CACxB,IAAI,cAAJ,CAAmB;AACjB,YAAQ;AADS,GAAnB,CADwB,CAA5B,EAKE,uCALF;AAOA,OAAK,KAAL,CAAW,IAAI,GAAJ,CAAQ,QAAR,CAAX,EAA8B,IAAI,cAAJ,CAAmB;AAC7C,YAAQ;AADqC,GAAnB,CAA9B,EAGE,yCAHF;AAKA,OAAK,KAAL,CAAW,IAAI,GAAJ,CAAQ,eAAR,CAAX,EAAqC,KAArC,EACE,gDADF;AAGD,CA3DD","file":"/packages/jagi:astronomy/test/modules/fields/get.js.map","sourcesContent":["Tinytest.add('Modules - Fields - Get', function(test) {\n  reset();\n\n  let GetClassNested = Astro.Class.create({\n    name: 'GetClassNested',\n    fields: {\n      string: {\n        type: String\n      }\n    }\n  });\n\n  // Define simple class to work with.\n  let GetClass = Astro.Class.create({\n    name: 'GetClass',\n    fields: {\n      one: {\n        type: GetClassNested\n      },\n      many: {\n        type: [GetClassNested]\n      }\n    }\n  });\n\n  let doc = new GetClass({\n    one: new GetClassNested({\n      string: 'abc'\n    }),\n    many: [\n      new GetClassNested({\n        string: 'abc'\n      })\n    ]\n  });\n\n  test.equal(doc.get('one'), new GetClassNested({\n      string: 'abc'\n    }),\n    'Wrong value get from the \"one\" field'\n  );\n  test.equal(doc.get('one.string'), 'abc',\n    'Wrong value get from the \"one.string\" field'\n  );\n  test.equal(doc.get('many'), [\n      new GetClassNested({\n        string: 'abc'\n      })\n    ],\n    'Wrong value get from the \"many\" field'\n  );\n  test.equal(doc.get('many.0'), new GetClassNested({\n      string: 'abc'\n    }),\n    'Wrong value get from the \"many.0\" field'\n  );\n  test.equal(doc.get('many.0.string'), 'abc',\n    'Wrong value get from the \"many.0.string\" field'\n  );\n});"]},"hash":"58150dee2ab0334e1d134082a7954c32bf5197ec"}
