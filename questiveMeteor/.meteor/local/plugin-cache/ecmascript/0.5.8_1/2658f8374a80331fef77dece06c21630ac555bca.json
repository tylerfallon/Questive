{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../../validator.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validator"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"regexp"},"ignored":false,"code":"var Validator;module.import('../../validator.js',{\"default\":function(v){Validator=v}});\n\nValidator.create({\n  name: 'regexp',\n  parseParam: function () {\n    function parseParam(param) {\n      if (!Match.test(param, RegExp)) {\n        throw new TypeError('Parameter for the \"regexp\" validator has to be a regular expression');\n      }\n    }\n\n    return parseParam;\n  }(),\n  isValid: function () {\n    function isValid(_ref) {\n      var value = _ref.value;\n      var param = _ref.param;\n\n      return param.test(value);\n    }\n\n    return isValid;\n  }(),\n  resolveError: function () {\n    function resolveError(_ref2) {\n      var name = _ref2.name;\n      var param = _ref2.param;\n\n      return '\"' + name + '\" does not match the \"' + param.toString() + '\" regular expression';\n    }\n\n    return resolveError;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAsB,oBAAtB;;AAEA,UAAU,MAAV,CAAiB;AACf,QAAM,QADS;AAEhB,YAFgB;AAAA,wBAEL,KAFK,EAEE;AACf,UAAI,CAAC,MAAM,IAAN,CAAW,KAAX,EAAkB,MAAlB,CAAL,EAAgC;AAC9B,cAAM,IAAI,SAAJ,uEAAN;AAGD;AACF;;AARc;AAAA;AASf,SATe;AAAA,2BASW;AAAA,UAAhB,KAAgB,QAAhB,KAAgB;AAAA,UAAT,KAAS,QAAT,KAAS;;AACxB,aAAO,MAAM,IAAN,CAAW,KAAX,CAAP;AACD;;AAXc;AAAA;AAYf,cAZe;AAAA,iCAYe;AAAA,UAAf,IAAe,SAAf,IAAe;AAAA,UAAT,KAAS,SAAT,KAAS;;AAC5B,mBAAW,IAAX,8BAAwC,MAAM,QAAN,EAAxC;AACD;;AAdc;AAAA;AAAA,CAAjB","file":"/packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js.map","sourcesContent":["import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'regexp',\n\tparseParam(param) {\n    if (!Match.test(param, RegExp)) {\n      throw new TypeError(\n        `Parameter for the \"regexp\" validator has to be a regular expression`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    return param.test(value);\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" does not match the \"${param.toString()}\" regular expression`;\n  }\n});"]},"hash":"2658f8374a80331fef77dece06c21630ac555bca"}
