{"metadata":{"usedHelpers":["objectWithoutProperties"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/fieldMaker.js","filenameRelative":"/imports/ui/fieldMaker.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/fieldMaker.js.map","sourceFileName":"/imports/ui/fieldMaker.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"fieldMaker"},"ignored":false,"code":"var _objectWithoutProperties;module.import('babel-runtime/helpers/objectWithoutProperties',{\"default\":function(v){_objectWithoutProperties=v}});\nvar React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\nvar helpers = require('../utils/helpers');\nvar ReactDOM = require('react-dom');\n\nfunction FieldGroup(_ref) {\n  var id = _ref.id;\n  var label = _ref.label;\n  var help = _ref.help;\n\n  var props = _objectWithoutProperties(_ref, ['id', 'label', 'help']);\n\n  return React.createElement(\n    FormGroup,\n    { controlId: id },\n    React.createElement(\n      ControlLabel,\n      null,\n      label\n    ),\n    React.createElement(FormControl, props),\n    help && React.createElement(\n      HelpBlock,\n      null,\n      help\n    )\n  );\n}\n\nvar formInstance = React.createElement(\n  'form',\n  null,\n  React.createElement(FieldGroup, {\n    id: 'formControlsText',\n    type: 'text',\n    label: 'Text',\n    placeholder: 'Enter text'\n  }),\n  React.createElement(FieldGroup, {\n    id: 'formControlsEmail',\n    type: 'email',\n    label: 'Email address',\n    placeholder: 'Enter email'\n  }),\n  React.createElement(FieldGroup, {\n    id: 'formControlsPassword',\n    label: 'Password',\n    type: 'password'\n  }),\n  React.createElement(FieldGroup, {\n    id: 'formControlsFile',\n    type: 'file',\n    label: 'File',\n    help: 'Example block-level help text here.'\n  }),\n  React.createElement(\n    Checkbox,\n    { checked: true, readOnly: true },\n    'Checkbox'\n  ),\n  React.createElement(\n    Radio,\n    { checked: true, readOnly: true },\n    'Radio'\n  ),\n  React.createElement(\n    FormGroup,\n    null,\n    React.createElement(\n      Checkbox,\n      { inline: true },\n      '1'\n    ),\n    ' ',\n    React.createElement(\n      Checkbox,\n      { inline: true },\n      '2'\n    ),\n    ' ',\n    React.createElement(\n      Checkbox,\n      { inline: true },\n      '3'\n    )\n  ),\n  React.createElement(\n    FormGroup,\n    null,\n    React.createElement(\n      Radio,\n      { inline: true },\n      '1'\n    ),\n    ' ',\n    React.createElement(\n      Radio,\n      { inline: true },\n      '2'\n    ),\n    ' ',\n    React.createElement(\n      Radio,\n      { inline: true },\n      '3'\n    )\n  ),\n  React.createElement(\n    FormGroup,\n    { controlId: 'formControlsSelect' },\n    React.createElement(\n      ControlLabel,\n      null,\n      'Select'\n    ),\n    React.createElement(\n      FormControl,\n      { componentClass: 'select', placeholder: 'select' },\n      React.createElement(\n        'option',\n        { value: 'select' },\n        'select'\n      ),\n      React.createElement(\n        'option',\n        { value: 'other' },\n        '...'\n      )\n    )\n  ),\n  React.createElement(\n    FormGroup,\n    { controlId: 'formControlsSelectMultiple' },\n    React.createElement(\n      ControlLabel,\n      null,\n      'Multiple select'\n    ),\n    React.createElement(\n      FormControl,\n      { componentClass: 'select', multiple: true },\n      React.createElement(\n        'option',\n        { value: 'select' },\n        'select (multiple)'\n      ),\n      React.createElement(\n        'option',\n        { value: 'other' },\n        '...'\n      )\n    )\n  ),\n  React.createElement(\n    FormGroup,\n    { controlId: 'formControlsTextarea' },\n    React.createElement(\n      ControlLabel,\n      null,\n      'Textarea'\n    ),\n    React.createElement(FormControl, { componentClass: 'textarea', placeholder: 'textarea' })\n  ),\n  React.createElement(\n    FormGroup,\n    null,\n    React.createElement(\n      ControlLabel,\n      null,\n      'Static text'\n    ),\n    React.createElement(\n      FormControl.Static,\n      null,\n      'email@example.com'\n    )\n  ),\n  React.createElement(\n    Button,\n    { type: 'submit' },\n    'Submit'\n  )\n);\n\nReactDOM.render(formInstance, mountNode);","ast":null,"map":{"version":3,"sources":["/imports/ui/fieldMaker.js"],"names":[],"mappings":"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","file":"/imports/ui/fieldMaker.js.map","sourcesContent":["var React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\nvar helpers = require('../utils/helpers');\nvar ReactDOM = require('react-dom');\n\nfunction FieldGroup({ id, label, help, ...props }) {\n  return (\n    <FormGroup controlId={id}>\n      <ControlLabel>{label}</ControlLabel>\n      <FormControl {...props} />\n      {help && <HelpBlock>{help}</HelpBlock>}\n    </FormGroup>\n  );\n}\n\nconst formInstance = (\n  <form>\n    <FieldGroup\n      id=\"formControlsText\"\n      type=\"text\"\n      label=\"Text\"\n      placeholder=\"Enter text\"\n    />\n    <FieldGroup\n      id=\"formControlsEmail\"\n      type=\"email\"\n      label=\"Email address\"\n      placeholder=\"Enter email\"\n    />\n    <FieldGroup\n      id=\"formControlsPassword\"\n      label=\"Password\"\n      type=\"password\"\n    />\n    <FieldGroup\n      id=\"formControlsFile\"\n      type=\"file\"\n      label=\"File\"\n      help=\"Example block-level help text here.\"\n    />\n\n    <Checkbox checked readOnly>\n      Checkbox\n    </Checkbox>\n    <Radio checked readOnly>\n      Radio\n    </Radio>\n\n    <FormGroup>\n      <Checkbox inline>\n        1\n      </Checkbox>\n      {' '}\n      <Checkbox inline>\n        2\n      </Checkbox>\n      {' '}\n      <Checkbox inline>\n        3\n      </Checkbox>\n    </FormGroup>\n    <FormGroup>\n      <Radio inline>\n        1\n      </Radio>\n      {' '}\n      <Radio inline>\n        2\n      </Radio>\n      {' '}\n      <Radio inline>\n        3\n      </Radio>\n    </FormGroup>\n\n    <FormGroup controlId=\"formControlsSelect\">\n      <ControlLabel>Select</ControlLabel>\n      <FormControl componentClass=\"select\" placeholder=\"select\">\n        <option value=\"select\">select</option>\n        <option value=\"other\">...</option>\n      </FormControl>\n    </FormGroup>\n    <FormGroup controlId=\"formControlsSelectMultiple\">\n      <ControlLabel>Multiple select</ControlLabel>\n      <FormControl componentClass=\"select\" multiple>\n        <option value=\"select\">select (multiple)</option>\n        <option value=\"other\">...</option>\n      </FormControl>\n    </FormGroup>\n\n    <FormGroup controlId=\"formControlsTextarea\">\n      <ControlLabel>Textarea</ControlLabel>\n      <FormControl componentClass=\"textarea\" placeholder=\"textarea\" />\n    </FormGroup>\n\n    <FormGroup>\n      <ControlLabel>Static text</ControlLabel>\n      <FormControl.Static>\n        email@example.com\n      </FormControl.Static>\n    </FormGroup>\n\n    <Button type=\"submit\">\n      Submit\n    </Button>\n  </form>\n);\n\nReactDOM.render(formInstance, mountNode);"]},"hash":"4d591cb27fa2fcc07004b998f00664a83a8c9216"}
