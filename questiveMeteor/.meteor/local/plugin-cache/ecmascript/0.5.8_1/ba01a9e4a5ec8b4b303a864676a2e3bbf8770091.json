{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"castToClass"},"ignored":false,"code":"function castToClass() {\n  var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var Class = args.Class;\n  var rawDoc = args.rawDoc;\n  var options = args.options;\n  // If the class has a type field, then we have to check if we are\n  // casting to some of the nested classes.\n\n  var typeField = Class.getTypeField();\n  if (typeField) {\n    var ChildClass = Class.get(rawDoc[typeField]);\n    if (ChildClass && ChildClass.isChildOf(Class)) {\n      return new ChildClass(rawDoc, options);\n    }\n  }\n  return new Class(rawDoc, options);\n};\n\nmodule.export(\"default\",exports.default=(castToClass));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js"],"names":[],"mappings":"AAAA,SAAS,WAAT,GAAgC;AAAA,MAAX,IAAW,yDAAJ,EAAI;AAAA,MAE5B,KAF4B,GAK1B,IAL0B,CAE5B,KAF4B;AAAA,MAG5B,MAH4B,GAK1B,IAL0B,CAG5B,MAH4B;AAAA,MAI5B,OAJ4B,GAK1B,IAL0B,CAI5B,OAJ4B;;;;AAQ9B,MAAM,YAAY,MAAM,YAAN,EAAlB;AACA,MAAI,SAAJ,EAAe;AACb,QAAM,aAAa,MAAM,GAAN,CAAU,OAAO,SAAP,CAAV,CAAnB;AACA,QAAI,cAAc,WAAW,SAAX,CAAqB,KAArB,CAAlB,EAA+C;AAC7C,aAAO,IAAI,UAAJ,CAAe,MAAf,EAAuB,OAAvB,CAAP;AACD;AACF;AACD,SAAO,IAAI,KAAJ,CAAU,MAAV,EAAkB,OAAlB,CAAP;AACD;;AAED,eAAe,WAAf","file":"/packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js.map","sourcesContent":["function castToClass(args = {}) {\n  const {\n    Class,\n    rawDoc,\n    options\n  } = args;\n  // If the class has a type field, then we have to check if we are\n  // casting to some of the nested classes.\n  const typeField = Class.getTypeField();\n  if (typeField) {\n    const ChildClass = Class.get(rawDoc[typeField]);\n    if (ChildClass && ChildClass.isChildOf(Class)) {\n      return new ChildClass(rawDoc, options);\n    }\n  }\n  return new Class(rawDoc, options);\n};\n\nexport default castToClass;"]},"hash":"ba01a9e4a5ec8b4b303a864676a2e3bbf8770091"}
