{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../utils/is_remote.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"isRemote"}]},{"source":"../utils/call_meteor_method.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"callMeteorMethod"}]},{"source":"../utils/class_remove.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classRemove"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"remove"},"ignored":false,"code":"var isRemote;module.import('../utils/is_remote.js',{\"default\":function(v){isRemote=v}});var callMeteorMethod;module.import('../utils/call_meteor_method.js',{\"default\":function(v){callMeteorMethod=v}});var classRemove;module.import('../utils/class_remove.js',{\"default\":function(v){classRemove=v}});\n\n\n\nfunction remove(selector, options, callback) {\n  var Class = this;\n\n  // If we omit options argument then it may be a callback function.\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  }\n  // Make sure that options is at least an empty object.\n  options = options || {};\n  // Prepare arguments.\n  var args = {\n    className: Class.getName(),\n    selector: selector,\n    options: options\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/remove';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Remove a document.\n    var result = classRemove(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nmodule.export(\"default\",exports.default=(remove));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,uBAArB;AACA,OAAO,gBAAP,MAA6B,gCAA7B;AACA,OAAO,WAAP,MAAwB,0BAAxB;;AAEA,SAAS,MAAT,CAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C;AAC3C,MAAM,QAAQ,IAAd;;;AAGA,MAAI,mBAAmB,QAAvB,EAAiC;AAC/B,eAAW,OAAX;AACA,cAAU,EAAV;AACD;;AAED,YAAU,WAAW,EAArB;;AAEA,MAAM,OAAO;AACX,eAAW,MAAM,OAAN,EADA;AAEX,sBAFW;AAGX;AAHW,GAAb;;;AAOA,MAAI,SAAS,KAAT,CAAJ,EAAqB;;AAEnB,QAAM,aAAa,mBAAnB;;AAEA,QAAI;;AAEF,aAAO,iBACL,KADK,EACE,UADF,EACc,CAAC,IAAD,CADd,EACsB,QADtB,CAAP;AAGD;;AAED,WAAO,GAAP,EAAY;AACV,UAAI,QAAJ,EAAc;AACZ,iBAAS,GAAT;AACA,eAAO,IAAP;AACD;AACD,YAAM,GAAN;AACD;AACF;;;;AAID,MAAI;;AAEF,SAAK,OAAL,GAAe,IAAf;;AAEA,QAAI,SAAS,YAAY,IAAZ,CAAb;AACA,QAAI,QAAJ,EAAc;AACZ,eAAS,SAAT,EAAoB,MAApB;AACD;AACD,WAAO,MAAP;AACD,GATD,CAUA,OAAO,GAAP,EAAY;AACV,QAAI,QAAJ,EAAc;AACZ,eAAS,GAAT;AACA,aAAO,IAAP;AACD;AACD,UAAM,GAAN;AACD;AACF;;AAED,eAAe,MAAf","file":"/packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js.map","sourcesContent":["import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classRemove from '../utils/class_remove.js';\n\nfunction remove(selector, options, callback) {\n  const Class = this;\n\n  // If we omit options argument then it may be a callback function.\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  }\n  // Make sure that options is at least an empty object.\n  options = options || {};\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    selector,\n    options\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/remove';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Remove a document.\n    let result = classRemove(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default remove;"]},"hash":"d5d8dcce09afa1377c2d8fd9c8ccac280ef2e9d3"}
