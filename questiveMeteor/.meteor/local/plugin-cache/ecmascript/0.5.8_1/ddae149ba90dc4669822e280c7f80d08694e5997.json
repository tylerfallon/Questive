{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../utils/parse_validators.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"parseValidators"}]},{"source":"../../validator.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validator"}]},{"source":"../../validators.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validators"}]},{"source":"meteor/mdg:validation-error","imported":["ValidationError"],"specifiers":[{"kind":"named","imported":"ValidationError","local":"ValidationError"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"or"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var parseValidators;module.import('../../utils/parse_validators.js',{\"default\":function(v){parseValidators=v}});var Validator;module.import('../../validator.js',{\"default\":function(v){Validator=v}});var Validators;module.import('../../validators.js',{\"default\":function(v){Validators=v}});var ValidationError;module.import('meteor/mdg:validation-error',{\"ValidationError\":function(v){ValidationError=v}});\n\n\n\n\n\nValidator.create({\n  name: 'or',\n  parseParam: function () {\n    function parseParam(param) {\n      parseValidators(param);\n    }\n\n    return parseParam;\n  }(),\n  validate: function () {\n    function validate(_ref) {\n      var doc = _ref.doc;\n      var name = _ref.name;\n      var value = _ref.value;\n      var validators = _ref.param;\n\n      var firstError = void 0;\n      var isValid = _.some(validators, function (validator) {\n        // Get validator.\n        var validationFunction = Validators[validator.type];\n        // Execute single validator.\n        try {\n          validationFunction({\n            doc: doc,\n            name: name,\n            value: value,\n            param: validator.param\n          });\n          return true;\n        } catch (err) {\n          if (ValidationError.is(err)) {\n            // Collect only the first error that occured.\n            if (!firstError) {\n              firstError = err;\n            }\n            return false;\n          } else {\n            throw err;\n          }\n        }\n      });\n\n      if (!isValid) {\n        throw firstError;\n      }\n    }\n\n    return validate;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,eAAP,MAA4B,iCAA5B;AACA,OAAO,SAAP,MAAsB,oBAAtB;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,SAAS,eAAT,QAAgC,6BAAhC;;AAEA,UAAU,MAAV,CAAiB;AACf,QAAM,IADS;AAEf,YAFe;AAAA,wBAEJ,KAFI,EAEG;AAChB,sBAAgB,KAAhB;AACD;;AAJc;AAAA;AAKf,UALe;AAAA,4BAUZ;AAAA,UAJD,GAIC,QAJD,GAIC;AAAA,UAHD,IAGC,QAHD,IAGC;AAAA,UAFD,KAEC,QAFD,KAEC;AAAA,UADM,UACN,QADD,KACC;;AACD,UAAI,mBAAJ;AACA,UAAM,UAAU,EAAE,IAAF,CAAO,UAAP,EAAmB,UAAS,SAAT,EAAoB;;AAErD,YAAM,qBAAqB,WAAW,UAAU,IAArB,CAA3B;;AAEA,YAAI;AACF,6BAAmB;AACjB,oBADiB;AAEjB,sBAFiB;AAGjB,wBAHiB;AAIjB,mBAAO,UAAU;AAJA,WAAnB;AAMA,iBAAO,IAAP;AACD,SARD,CASA,OAAO,GAAP,EAAY;AACV,cAAI,gBAAgB,EAAhB,CAAmB,GAAnB,CAAJ,EAA6B;;AAE3B,gBAAI,CAAC,UAAL,EAAiB;AACf,2BAAa,GAAb;AACD;AACD,mBAAO,KAAP;AACD,WAND,MAOK;AACH,kBAAM,GAAN;AACD;AACF;AACF,OAzBe,CAAhB;;AA2BA,UAAI,CAAC,OAAL,EAAc;AACZ,cAAM,UAAN;AACD;AACF;;AA1Cc;AAAA;AAAA,CAAjB","file":"/packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js.map","sourcesContent":["import _ from 'lodash';\nimport parseValidators from '../../utils/parse_validators.js';\nimport Validator from '../../validator.js';\nimport Validators from '../../validators.js';\nimport { ValidationError } from 'meteor/mdg:validation-error';\n\nValidator.create({\n  name: 'or',\n  parseParam(param) {\n    parseValidators(param);\n  },\n  validate({\n    doc,\n    name,\n    value,\n    param: validators\n  }) {\n    let firstError;\n    const isValid = _.some(validators, function(validator) {\n      // Get validator.\n      const validationFunction = Validators[validator.type];\n      // Execute single validator.\n      try {\n        validationFunction({\n          doc,\n          name,\n          value,\n          param: validator.param\n        });\n        return true;\n      }\n      catch (err) {\n        if (ValidationError.is(err)) {\n          // Collect only the first error that occured.\n          if (!firstError) {\n            firstError = err;\n          }\n          return false;\n        }\n        else {\n          throw err;\n        }\n      }\n    });\n\n    if (!isValid) {\n      throw firstError;\n    }\n  }\n});"]},"hash":"ddae149ba90dc4669822e280c7f80d08694e5997"}
