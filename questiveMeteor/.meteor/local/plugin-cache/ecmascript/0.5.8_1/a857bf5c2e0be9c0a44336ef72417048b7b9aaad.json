{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../../../core/class.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AstroClass"}]},{"source":"./already_in_simulation.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"alreadyInSimulation"}]},{"source":"./throw_if_selector_is_not_id.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"throwIfSelectorIsNotId"}]},{"source":"./document_remove.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"documentRemove"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"class_remove"},"ignored":false,"code":"var AstroClass;module.import('../../../core/class.js',{\"default\":function(v){AstroClass=v}});var alreadyInSimulation;module.import('./already_in_simulation.js',{\"default\":function(v){alreadyInSimulation=v}});var throwIfSelectorIsNotId;module.import('./throw_if_selector_is_not_id.js',{\"default\":function(v){throwIfSelectorIsNotId=v}});var documentRemove;module.import('./document_remove.js',{\"default\":function(v){documentRemove=v}});\n\n\n\n\nfunction classRemove() {\n  var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var className = args.className;\n  var selector = args.selector;\n  var options = args.options;\n  var _args$simulation = args.simulation;\n  var simulation = _args$simulation === undefined ? true : _args$simulation;\n  var _args$trusted = args.trusted;\n  var trusted = _args$trusted === undefined ? false : _args$trusted;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'remove');\n  }\n\n  var Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  var docs = Class.find(selector, options);\n  // Prepare result of the method execution.\n  var result = 0;\n\n  docs.forEach(function (doc) {\n    // Update a document.\n    result += documentRemove({\n      doc: doc,\n      simulation: simulation,\n      trusted: trusted\n    });\n  });\n\n  return result;\n};\n\nmodule.export(\"default\",exports.default=(classRemove));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js"],"names":[],"mappings":"AAAA,OAAO,UAAP,MAAuB,wBAAvB;AACA,OAAO,mBAAP,MAAgC,4BAAhC;AACA,OAAO,sBAAP,MAAmC,kCAAnC;AACA,OAAO,cAAP,MAA2B,sBAA3B;;AAEA,SAAS,WAAT,GAAgC;AAAA,MAAX,IAAW,yDAAJ,EAAI;AAAA,MAE5B,SAF4B,GAO1B,IAP0B,CAE5B,SAF4B;AAAA,MAG5B,QAH4B,GAO1B,IAP0B,CAG5B,QAH4B;AAAA,MAI5B,OAJ4B,GAO1B,IAP0B,CAI5B,OAJ4B;AAAA,yBAO1B,IAP0B,CAK5B,UAL4B;AAAA,MAK5B,UAL4B,oCAKf,IALe;AAAA,sBAO1B,IAP0B,CAM5B,OAN4B;AAAA,MAM5B,OAN4B,iCAMlB,KANkB;;;;;AAW9B,MAAI,CAAC,UAAD,IAAe,CAAC,OAAO,QAA3B,EAAqC;AACnC;AACD;;;;AAID,MAAI,CAAC,OAAD,IAAY,CAAC,qBAAjB,EAAwC;AACtC,2BAAuB,QAAvB,EAAiC,QAAjC;AACD;;AAED,MAAM,QAAQ,WAAW,GAAX,CAAe,SAAf,CAAd;;AAEA,MAAM,OAAO,MAAM,IAAN,CAAW,QAAX,EAAqB,OAArB,CAAb;;AAEA,MAAI,SAAS,CAAb;;AAEA,OAAK,OAAL,CAAa,UAAC,GAAD,EAAS;;AAEpB,cAAU,eAAe;AACvB,cADuB;AAEvB,4BAFuB;AAGvB;AAHuB,KAAf,CAAV;AAKD,GAPD;;AASA,SAAO,MAAP;AACD;;AAED,eAAe,WAAf","file":"/packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js.map","sourcesContent":["import AstroClass from '../../../core/class.js';\nimport alreadyInSimulation from './already_in_simulation.js';\nimport throwIfSelectorIsNotId from './throw_if_selector_is_not_id.js';\nimport documentRemove from './document_remove.js';\n\nfunction classRemove(args = {}) {\n  const {\n    className,\n    selector,\n    options,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'remove');\n  }\n\n  const Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  const docs = Class.find(selector, options);\n  // Prepare result of the method execution.\n  let result = 0;\n\n  docs.forEach((doc) => {\n    // Update a document.\n    result += documentRemove({\n      doc,\n      simulation,\n      trusted\n    });\n  });\n\n  return result;\n};\n\nexport default classRemove;"]},"hash":"a857bf5c2e0be9c0a44336ef72417048b7b9aaad"}
