{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../core/utils/throw_parse_error.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"throwParseError"}]},{"source":"../../../core/reserved_keywords.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"reservedKeywords"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"parse_definition"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var throwParseError;module.import('../../core/utils/throw_parse_error.js',{\"default\":function(v){throwParseError=v}});var reservedKeywords;module.import('../../../core/reserved_keywords.js',{\"default\":function(v){reservedKeywords=v}});\n\n\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence and validity of the \"methods\" property.\n\tif (definition.methods !== undefined) {\n\t\tif (!Match.test(definition.methods, Object)) {\n\t\t\tthrowParseError([{\n\t\t\t\t'class': className\n\t\t\t}, {\n\t\t\t\t'property': 'methods'\n\t\t\t}, 'Methods definition has to be an object']);\n\t\t}\n\n\t\t_.each(definition.methods, function (method, methodName) {\n\t\t\tif (!Match.test(method, Function)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'method': methodName\n\t\t\t\t}, 'Method has to be a function']);\n\t\t\t}\n\n\t\t\tif (_.includes(reservedKeywords, methodName)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'method': methodName\n\t\t\t\t}, 'Reserved keyword']);\n\t\t\t}\n\t\t\tparsedDefinition.methods[methodName] = method;\n\t\t});\n\t}\n};\n\nmodule.export(\"default\",exports.default=(onParseDefinition));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,eAAP,MAA4B,uCAA5B;AACA,OAAO,gBAAP,MAA6B,oCAA7B;;AAEA,SAAS,iBAAT,CAA2B,gBAA3B,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE;;AAEnE,KAAI,WAAW,OAAX,KAAuB,SAA3B,EAAsC;AACrC,MAAI,CAAC,MAAM,IAAN,CAAW,WAAW,OAAtB,EAA+B,MAA/B,CAAL,EAA6C;AAC5C,mBAAgB,CAAC;AACf,aAAS;AADM,IAAD,EAEZ;AACF,gBAAY;AADV,IAFY,EAKf,wCALe,CAAhB;AAOA;;AAED,IAAE,IAAF,CAAO,WAAW,OAAlB,EAA2B,UAAS,MAAT,EAAiB,UAAjB,EAA6B;AACvD,OAAI,CAAC,MAAM,IAAN,CAAW,MAAX,EAAmB,QAAnB,CAAL,EAAmC;AAClC,oBAAgB,CAAC;AACf,cAAS;AADM,KAAD,EAEZ;AACF,eAAU;AADR,KAFY,EAKf,6BALe,CAAhB;AAOA;;AAEE,OAAI,EAAE,QAAF,CAAW,gBAAX,EAA6B,UAA7B,CAAJ,EAA8C;AAC5C,oBAAgB,CAAC;AACnB,cAAS;AADU,KAAD,EAEhB;AACF,eAAU;AADR,KAFgB,EAKnB,kBALmB,CAAhB;AAOD;AACJ,oBAAiB,OAAjB,CAAyB,UAAzB,IAAuC,MAAvC;AACA,GArBD;AAsBA;AACD;;AAED,eAAe,iBAAf","file":"/packages/jagi:astronomy/lib/modules/methods/hooks/parse_definition.js.map","sourcesContent":["import _ from 'lodash';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport reservedKeywords from '../../../core/reserved_keywords.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence and validity of the \"methods\" property.\n\tif (definition.methods !== undefined) {\n\t\tif (!Match.test(definition.methods, Object)) {\n\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'property': 'methods'\n\t\t\t\t},\n\t\t\t\t'Methods definition has to be an object'\n\t\t\t]);\n\t\t}\n\n\t\t_.each(definition.methods, function(method, methodName) {\n\t\t\tif (!Match.test(method, Function)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'method': methodName\n\t\t\t\t\t},\n\t\t\t\t\t'Method has to be a function'\n\t\t\t\t]);\n\t\t\t}\n\n      if (_.includes(reservedKeywords, methodName)) {\n        throwParseError([{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'method': methodName\n\t\t\t\t\t},\n\t\t\t\t\t'Reserved keyword'\n\t\t\t\t]);\n      }\n\t\t\tparsedDefinition.methods[methodName] = method;\n\t\t});\n\t}\n};\n\nexport default onParseDefinition;"]},"hash":"a8a0408ed9e41df501242d8b53cc190e08ad071d"}
