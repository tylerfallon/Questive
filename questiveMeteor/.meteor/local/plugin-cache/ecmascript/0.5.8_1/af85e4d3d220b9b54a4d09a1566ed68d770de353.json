{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/http/test_responder.js","filenameRelative":"/packages/http/test_responder.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/http/test_responder.js.map","sourceFileName":"/packages/http/test_responder.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"test_responder"},"ignored":false,"code":"var TEST_RESPONDER_ROUTE = \"/http_test_responder\";\n\nvar respond = function respond(req, res) {\n\n  if (req.url.slice(0, 5) === \"/slow\") {\n    setTimeout(function () {\n      res.statusCode = 200;\n      res.end(\"A SLOW RESPONSE\");\n    }, 5000);\n    return;\n  } else if (req.url === \"/fail\") {\n    res.statusCode = 500;\n    res.end(\"SOME SORT OF SERVER ERROR. foo\" + _.times(100, function () {\n      return \"MAKE THIS LONG TO TEST THAT WE TRUNCATE\";\n    }).join(' '));\n    return;\n  } else if (req.url === \"/redirect\") {\n    res.statusCode = 301;\n    // XXX shouldn't be redirecting to a relative URL, per HTTP spec,\n    // but browsers etc. seem to tolerate it.\n    res.setHeader(\"Location\", TEST_RESPONDER_ROUTE + \"/foo\");\n    res.end(\"REDIRECT TO FOO\");\n    return;\n  } else if (req.url.slice(0, 6) === \"/login\") {\n    var username = 'meteor';\n    // get password from query string\n    var password = req.url.slice(7);\n    // realm is displayed in dialog box if one pops up, avoid confusion\n    var realm = TEST_RESPONDER_ROUTE + \"/login\";\n    var validate = function validate(user, pass) {\n      return user === username && pass === password;\n    };\n    var connect = WebAppInternals.NpmModules.connect.module;\n    var checker = connect.basicAuth(validate, realm);\n    var success = false;\n    checker(req, res, function () {\n      success = true;\n    });\n    if (!success) return;\n  } else if (req.url === \"/headers\") {\n    res.statusCode = 201;\n    res.setHeader(\"A-Silly-Header\", \"Tis a\");\n    res.setHeader(\"Another-Silly-Header\", \"Silly place.\");\n    res.end(\"A RESPONSE WITH SOME HEADERS\");\n    return;\n  }\n\n  var chunks = [];\n  req.setEncoding(\"utf8\");\n  req.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n  req.on(\"end\", function () {\n    var body = chunks.join('');\n\n    if (body.charAt(0) === '{') {\n      body = JSON.parse(body);\n    }\n\n    var response_data = {\n      method: req.method,\n      url: req.url,\n      headers: req.headers,\n      body: body\n    };\n    var response_string = \"\";\n    if (req.method !== \"HEAD\") response_string = JSON.stringify(response_data);\n\n    res.statusCode = 200;\n    res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n    res.end(response_string);\n  });\n};\n\nvar run_responder = function run_responder() {\n  WebApp.connectHandlers.stack.unshift({ route: TEST_RESPONDER_ROUTE, handle: respond });\n};\n\nrun_responder();","ast":null,"map":{"version":3,"sources":["/packages/http/test_responder.js"],"names":[],"mappings":"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","file":"/packages/http/test_responder.js.map","sourcesContent":["var TEST_RESPONDER_ROUTE = \"/http_test_responder\";\n\nvar respond = function(req, res) {\n\n  if (req.url.slice(0,5) === \"/slow\") {\n    setTimeout(function() {\n      res.statusCode = 200;\n      res.end(\"A SLOW RESPONSE\");\n    }, 5000);\n    return;\n  } else if (req.url === \"/fail\") {\n    res.statusCode = 500;\n    res.end(\"SOME SORT OF SERVER ERROR. foo\" +\n            _.times(100, function () {\n              return \"MAKE THIS LONG TO TEST THAT WE TRUNCATE\";\n            }).join(' '));\n    return;\n  } else if (req.url === \"/redirect\") {\n    res.statusCode = 301;\n    // XXX shouldn't be redirecting to a relative URL, per HTTP spec,\n    // but browsers etc. seem to tolerate it.\n    res.setHeader(\"Location\", TEST_RESPONDER_ROUTE+\"/foo\");\n    res.end(\"REDIRECT TO FOO\");\n    return;\n  } else if (req.url.slice(0,6) === \"/login\") {\n    var username = 'meteor';\n    // get password from query string\n    var password = req.url.slice(7);\n    // realm is displayed in dialog box if one pops up, avoid confusion\n    var realm = TEST_RESPONDER_ROUTE+\"/login\";\n    var validate = function(user, pass) {\n      return user === username && pass === password;\n    };\n    var connect = WebAppInternals.NpmModules.connect.module;\n    var checker = connect.basicAuth(validate, realm);\n    var success = false;\n    checker(req, res, function() {\n      success = true;\n    });\n    if (! success)\n      return;\n  } else if (req.url === \"/headers\") {\n    res.statusCode = 201;\n    res.setHeader(\"A-Silly-Header\", \"Tis a\");\n    res.setHeader(\"Another-Silly-Header\", \"Silly place.\");\n    res.end(\"A RESPONSE WITH SOME HEADERS\");\n    return;\n  }\n\n  var chunks = [];\n  req.setEncoding(\"utf8\");\n  req.on(\"data\", function(chunk) {\n    chunks.push(chunk); });\n  req.on(\"end\", function() {\n    var body = chunks.join('');\n\n    if (body.charAt(0) === '{') {\n      body = JSON.parse(body);\n    }\n\n    var response_data = {\n      method: req.method,\n      url: req.url,\n      headers: req.headers,\n      body: body\n    };\n    var response_string = \"\";\n    if (req.method !== \"HEAD\")\n      response_string = JSON.stringify(response_data);\n\n    res.statusCode = 200;\n    res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n    res.end(response_string);\n  });\n\n};\n\nvar run_responder = function() {\n  WebApp.connectHandlers.stack.unshift(\n    { route: TEST_RESPONDER_ROUTE, handle: respond });\n};\n\nrun_responder();\n"]},"hash":"af85e4d3d220b9b54a4d09a1566ed68d770de353"}
