{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../api/tasks.js","imported":["Tasks"],"specifiers":[{"kind":"named","imported":"Tasks","local":"Tasks"}]},{"source":"./Children/Leaderboard.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"LeaderBoard"}]},{"source":"./Children/create_hunt.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Create"}]},{"source":"./UIWrapper.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AccountsUIWrapper"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/App.jsx","filenameRelative":"/imports/ui/App.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/App.jsx.map","sourceFileName":"/imports/ui/App.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"App"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var Tasks;module.import('../api/tasks.js',{\"Tasks\":function(v){Tasks=v}});var LeaderBoard;module.import('./Children/Leaderboard.jsx',{\"default\":function(v){LeaderBoard=v}});var Create;module.import('./Children/create_hunt.jsx',{\"default\":function(v){Create=v}});var AccountsUIWrapper;module.import('./UIWrapper.jsx',{\"default\":function(v){AccountsUIWrapper=v}});\n\n\n\n\n//Get meteor from all the correct informaiton from user\n\n\n// inport the database information fro tasks api\n\n// import tasks ux.  just like react components\n\n// Load Components to display on the portal\n\n\n\n// get the Blaze account informaiton\n\n\n// App component - represents the whole app\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  App.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        'div',\n        { className: 'container' },\n        React.createElement(\n          'h1',\n          null,\n          ' QUESTIVE: LIVE OUTSIDE YOUR SCREENS'\n        ),\n        React.createElement(AccountsUIWrapper, null),\n        React.createElement(\n          'div',\n          null,\n          React.createElement(\n            'a',\n            { href: '#' },\n            ' Home'\n          ),\n          React.createElement(\n            'a',\n            { href: '#' },\n            ' Leaderboards'\n          ),\n          React.createElement(\n            'a',\n            { href: '#' },\n            ' New Hunt'\n          ),\n          React.createElement(\n            'a',\n            { href: '#' },\n            ' Available hunts'\n          )\n        ),\n        React.createElement('div', null),\n        React.createElement(LeaderBoard, null),\n        React.createElement(Create, null)\n      );\n    }\n\n    return render;\n  }();\n\n  return App;\n}(Component);\n\nApp.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  incompleteCount: PropTypes.number.isRequired,\n  currentUser: PropTypes.object\n};\n\nmodule.export(\"default\",exports.default=(createContainer(function () {\n  //Subscribe to tasks\n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user()\n  };\n}, App)));","ast":null,"map":{"version":3,"sources":["/imports/ui/App.jsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,OAAO,QAAP,MAAqB,WAArB;;AAEA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,eAAT,QAAgC,0BAAhC;;AAEA,SAAS,KAAT,QAAsB,iBAAtB;;;;AAKA,OAAO,WAAP,MAAuB,4BAAvB;AACA,OAAO,MAAP,MAAmB,4BAAnB;;;AAGA,OAAO,iBAAP,MAA8B,iBAA9B;;;;IAGM,G;;;;;;;;;gBAEJ,M;sBAAS;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE,4BAAC,iBAAD,OAFF;AAGE;AAAA;AAAA;AACE;AAAA;AAAA,cAAG,MAAM,GAAT;AAAA;AAAA,WADF;AAEE;AAAA;AAAA,cAAG,MAAM,GAAT;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA,cAAG,MAAO,GAAV;AAAA;AAAA,WAHF;AAIE;AAAA;AAAA,cAAG,MAAO,GAAV;AAAA;AAAA;AAJF,SAHF;AAWA,wCAXA;AAYE,4BAAC,WAAD,OAZF;AAeE,4BAAC,MAAD;AAfF,OADF;AAqBD;;;;;;EAxBe,S;;AA2BlB,IAAI,SAAJ,GAAgB;AACd,SAAO,UAAU,KAAV,CAAgB,UADT;AAEd,mBAAiB,UAAU,MAAV,CAAiB,UAFpB;AAGd,eAAa,UAAU;AAHT,CAAhB;;AAMA,eAAe,gBAAgB,YAAM;;AAEnC,SAAO,SAAP,CAAiB,OAAjB;;AAEA,SAAO;AACL,WAAO,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAd,EAAR,EAAf,EAA4C,KAA5C,EADF;AAEL,qBAAiB,MAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAP,EAAX,EAAX,EAAuC,KAAvC,EAFZ;AAGL,iBAAa,OAAO,IAAP;AAHR,GAAP;AAKD,CATc,EASZ,GATY,CAAf","file":"/imports/ui/App.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\n//Get meteor from all the correct informaiton from user \nimport { Meteor } from 'meteor/meteor';\nimport { createContainer } from 'meteor/react-meteor-data';\n// inport the database information fro tasks api\nimport { Tasks } from '../api/tasks.js';\n// import tasks ux.  just like react components \n\n\n// Load Components to display on the portal \nimport LeaderBoard from'./Children/Leaderboard.jsx';\nimport Create from './Children/create_hunt.jsx';\n\n// get the Blaze account informaiton \nimport AccountsUIWrapper from './UIWrapper.jsx';\n\n// App component - represents the whole app\nclass App extends Component {\n  \n  render() {\n    return(\n      <div className=\"container\">\n        <h1> QUESTIVE: LIVE OUTSIDE YOUR SCREENS</h1>\n        <AccountsUIWrapper />\n        <div>\n          <a href =\"#\"> Home</a>\n          <a href =\"#\"> Leaderboards</a>\n          <a href = \"#\"> New Hunt</a>\n          <a href = \"#\"> Available hunts</a>\n\n        </div>\n      {/* Display leaderboard component */}\n      <div></div>\n        <LeaderBoard />\n      {/* Display Create Contest component Current displayes */}\n\n        <Create />\n\n\n      </div>\n   )\n  }\n}\n\nApp.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  incompleteCount: PropTypes.number.isRequired,\n  currentUser: PropTypes.object,\n};\n\nexport default createContainer(() => {\n  //Subscribe to tasks \n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n}, App);"]},"hash":"d6fbf4c88636c2e084be9a1b9e476316ba6ff2e6"}
