{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../utils/parse_validators.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"parseValidators"}]},{"source":"../../validator.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validator"}]},{"source":"../../validators.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validators"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"every"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var parseValidators;module.import('../../utils/parse_validators.js',{\"default\":function(v){parseValidators=v}});var Validator;module.import('../../validator.js',{\"default\":function(v){Validator=v}});var Validators;module.import('../../validators.js',{\"default\":function(v){Validators=v}});\n\n\n\n\nValidator.create({\n  name: 'every',\n  parseParam: function parseParam(param) {\n    parseValidators(param);\n  },\n  validate: function validate(_ref) {\n    var doc = _ref.doc;\n    var name = _ref.name;\n    var nestedName = _ref.nestedName;\n    var value = _ref.value;\n    var validators = _ref.param;\n\n    if (!_.isArray(value)) {\n      throw new TypeError('The \"every\" validator can only work with arrays');\n    }\n\n    // Execute validators for each array element.\n    _.each(value, function (element, index) {\n      // Execute each validator.\n      _.each(validators, function (validator) {\n        // Get validator.\n        var validationFunction = Validators[validator.type];\n        // Execute single validator.\n        validationFunction({\n          doc: doc,\n          name: name + '.' + index,\n          nestedName: nestedName + '.' + index,\n          value: element,\n          param: validator.param\n        });\n      });\n    });\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,eAAP,MAA4B,iCAA5B;AACA,OAAO,SAAP,MAAsB,oBAAtB;AACA,OAAO,UAAP,MAAuB,qBAAvB;;AAEA,UAAU,MAAV,CAAiB;AACf,QAAM,OADS;AAEf,YAFe,sBAEJ,KAFI,EAEG;AAChB,oBAAgB,KAAhB;AACD,GAJc;AAKf,UALe,0BAWZ;AAAA,QALD,GAKC,QALD,GAKC;AAAA,QAJD,IAIC,QAJD,IAIC;AAAA,QAHD,UAGC,QAHD,UAGC;AAAA,QAFD,KAEC,QAFD,KAEC;AAAA,QADM,UACN,QADD,KACC;;AACD,QAAI,CAAC,EAAE,OAAF,CAAU,KAAV,CAAL,EAAuB;AACrB,YAAM,IAAI,SAAJ,mDAAN;AAGD;;;AAGD,MAAE,IAAF,CAAO,KAAP,EAAc,UAAS,OAAT,EAAkB,KAAlB,EAAyB;;AAErC,QAAE,IAAF,CAAO,UAAP,EAAmB,UAAS,SAAT,EAAoB;;AAErC,YAAM,qBAAqB,WAAW,UAAU,IAArB,CAA3B;;AAEA,2BAAmB;AACjB,kBADiB;AAEjB,gBAAS,IAAT,SAAiB,KAFA;AAGjB,sBAAe,UAAf,SAA6B,KAHZ;AAIjB,iBAAO,OAJU;AAKjB,iBAAO,UAAU;AALA,SAAnB;AAOD,OAXD;AAYD,KAdD;AAeD;AAlCc,CAAjB","file":"/packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js.map","sourcesContent":["import _ from 'lodash';\nimport parseValidators from '../../utils/parse_validators.js';\nimport Validator from '../../validator.js';\nimport Validators from '../../validators.js';\n\nValidator.create({\n  name: 'every',\n  parseParam(param) {\n    parseValidators(param);\n  },\n  validate({\n    doc,\n    name,\n    nestedName,\n    value,\n    param: validators\n  }) {\n    if (!_.isArray(value)) {\n      throw new TypeError(\n        `The \"every\" validator can only work with arrays`\n      );\n    }\n\n    // Execute validators for each array element.\n    _.each(value, function(element, index) {\n      // Execute each validator.\n      _.each(validators, function(validator) {\n        // Get validator.\n        const validationFunction = Validators[validator.type];\n        // Execute single validator.\n        validationFunction({\n          doc,\n          name: `${name}.${index}`,\n          nestedName: `${nestedName}.${index}`,\n          value: element,\n          param: validator.param\n        });\n      });\n    });\n  }\n});"]},"hash":"c51dcc3f2dd6d63df09a5ce8e4724c6047000411"}
