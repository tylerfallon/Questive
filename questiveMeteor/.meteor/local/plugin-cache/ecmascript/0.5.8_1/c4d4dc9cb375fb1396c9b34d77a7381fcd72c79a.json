{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-bootstrap","imported":["Button"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/leaderboards.js","filenameRelative":"/imports/ui/leaderboards.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/leaderboards.js.map","sourceFileName":"/imports/ui/leaderboards.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"leaderboards"},"ignored":false,"code":"var Button;module.import('react-bootstrap',{\"Button\":function(v){Button=v}});var React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\n\n\nvar Leaderboards = React.createClass({\n  displayName: 'Leaderboards',\n\n  getInitialState: function () {\n    function getInitialState() {\n      return {\n        searchResults: []\n      };\n    }\n\n    return getInitialState;\n  }(),\n  showResults: function () {\n    function showResults(response) {\n      console.log(\"Showing\");\n      this.setState({\n        searchResults: response\n      });\n    }\n\n    return showResults;\n  }(),\n  search: function () {\n    function search(URL) {\n      console.log(\"searching\");\n      $.ajax({\n        type: \"GET\",\n        dataType: 'jsonp',\n        url: URL,\n        success: function (jsonData) {\n          this.showResults(jsonData);\n        }.bind(this)\n      });\n    }\n\n    return search;\n  }(),\n  componentDidMount: function () {\n    function componentDidMount() {\n      this.search(\"userlinkhere\");\n    }\n\n    return componentDidMount;\n  }(),\n  render: function () {\n    function render() {\n      return React.createElement(\n        'div',\n        null,\n        React.createElement(SearchBox, { search: this.search }),\n        React.createElement(Results, { searchResults: this.state.searchResults })\n      );\n    }\n\n    return render;\n  }()\n});\n\nvar SearchBox = React.createClass({\n  displayName: 'SearchBox',\n\n  createAjax: function () {\n    function createAjax() {\n      var category = ReactDOM.findDOMNode(this.refs.category).value;\n      if (category == \"alltime\") {\n        var URL = \"userlinkhere\";\n      } else {\n        var URL = \"userlinkhere\";\n      }\n      this.props.search(URL);\n    }\n\n    return createAjax;\n  }(),\n  render: function () {\n    function render() {\n      return React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'label',\n          null,\n          'Sort By:'\n        ),\n        React.createElement(\n          'select',\n          { ref: 'category' },\n          React.createElement(\n            'option',\n            { value: 'alltime' },\n            'All'\n          ),\n          React.createElement(\n            'option',\n            { value: 'recent' },\n            'Recent'\n          )\n        ),\n        React.createElement(\n          Button,\n          { bsSize: 'xsmall', input: true, type: 'submit', onClick: this.createAjax },\n          'Sort'\n        )\n      );\n    }\n\n    return render;\n  }()\n});\n\nvar Results = React.createClass({\n  displayName: 'Results',\n\n  render: function () {\n    function render() {\n      var resultItems = this.props.searchResults.map(function (result, index) {\n        return React.createElement(ResultItem, { key: index, reactKey: index, username: result.username, alltime: result.alltime, recent: result.recent, imageUrl: result.img });\n      });\n      return React.createElement(\n        'table',\n        { className: 'table table-striped' },\n        React.createElement(\n          'thead',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'th',\n              null,\n              '#'\n            ),\n            React.createElement(\n              'th',\n              null,\n              'Username'\n            ),\n            React.createElement(\n              'th',\n              null,\n              'Points'\n            ),\n            React.createElement(\n              'th',\n              null,\n              'Something else'\n            )\n          )\n        ),\n        React.createElement(\n          'tbody',\n          null,\n          resultItems\n        )\n      );\n    }\n\n    return render;\n  }()\n});\n\nvar ResultItem = React.createClass({\n  displayName: 'ResultItem',\n\n  render: function () {\n    function render() {\n      var imageStyle = {\n        width: '50px',\n        height: '50px'\n      };\n      return React.createElement(\n        'tr',\n        null,\n        React.createElement(\n          'td',\n          null,\n          this.props.reactKey\n        ),\n        React.createElement(\n          'td',\n          null,\n          React.createElement('img', { src: this.props.imageUrl, style: imageStyle }),\n          ' ',\n          this.props.username\n        ),\n        React.createElement(\n          'td',\n          null,\n          this.props.recent\n        ),\n        React.createElement(\n          'td',\n          null,\n          this.props.alltime\n        )\n      );\n    }\n\n    return render;\n  }()\n});\n\nmodule.export(\"default\",exports.default=(Leaderboards));","ast":null,"map":{"version":3,"sources":["/imports/ui/leaderboards.js"],"names":[],"mappings":"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","file":"/imports/ui/leaderboards.js.map","sourcesContent":["var React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\nimport { Button } from 'react-bootstrap';\n\n\nvar Leaderboards = React.createClass({\n  getInitialState: function () {\n    return (\n      {\n        searchResults: []\n      }\n    );\n  },\n  showResults: function (response) {\n    console.log(\"Showing\");\n    this.setState({\n      searchResults: response\n    });\n  },\n  search: function (URL) {\n    console.log(\"searching\");\n    $.ajax({\n      type: \"GET\",\n      dataType: 'jsonp',\n      url: URL,\n      success: function (jsonData) {\n        this.showResults(jsonData)\n      }.bind(this)\n    });\n  },\n  componentDidMount: function () {\n    this.search(\"userlinkhere\");\n  },\n  render: function () {\n    return (\n      <div>\n        <SearchBox search = {this.search}/>\n        <Results searchResults = {this.state.searchResults}/>\n      </div>\n    );\n  }\n});\n\nvar SearchBox = React.createClass({\n  createAjax: function () {\n    var category = ReactDOM.findDOMNode(this.refs.category).value;\n    if(category == \"alltime\") {\n      var URL = \"userlinkhere\";\n    } else {\n      var URL = \"userlinkhere\";\n    }\n    this.props.search(URL);\n  },\n  render: function () {\n    return (\n      <div>\n        <label>Sort By:</label>\n        <select ref=\"category\">\n          <option value=\"alltime\">All</option>\n          <option value=\"recent\">Recent</option>\n        </select>\n         <Button bsSize=\"xsmall\" input type=\"submit\" onClick = {this.createAjax}>Sort</Button>\n\n      </div>\n    );\n  }\n});\n\nvar Results = React.createClass({\n  render: function () {\n    var resultItems = this.props.searchResults.map(function (result, index) {\n      return (\n        <ResultItem key={index} reactKey={index} username={result.username} alltime={result.alltime} recent={result.recent} imageUrl={result.img}/>\n      );\n    })\n    return (\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Username</th>\n            <th>Points</th>\n            <th>Something else</th>\n          </tr>\n        </thead>\n        <tbody>\n          {resultItems}\n        </tbody>\n      </table>\n    )\n  }\n});\n\nvar ResultItem = React.createClass({\n  render: function () {\n    var imageStyle = {\n      width: '50px',\n      height: '50px'\n    }\n    return (\n      <tr>\n        <td>{this.props.reactKey}</td>\n        <td><img src={this.props.imageUrl} style={imageStyle}></img> {this.props.username}</td>\n        <td>{this.props.recent}</td>\n        <td>{this.props.alltime}</td>\n      </tr>\n    );\n  }\n});\n\n\nexport default Leaderboards;"]},"hash":"c4d4dc9cb375fb1396c9b34d77a7381fcd72c79a"}
