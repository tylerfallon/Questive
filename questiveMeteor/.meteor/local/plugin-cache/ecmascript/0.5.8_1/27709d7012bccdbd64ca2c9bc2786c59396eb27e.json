{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"validate_all"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});\n\nfunction validateAll() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var callback = arguments[1];\n\n  var doc = this;\n  var Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  _.extend(options, {\n    fields: Class.getValidationOrder(),\n    stopOnFirstError: false\n  });\n\n  doc.validate(options, callback);\n};\n\nmodule.export(\"default\",exports.default=(validateAll));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;;AAEA,SAAS,WAAT,GAA6C;AAAA,MAAxB,OAAwB,yDAAd,EAAc;AAAA,MAAV,QAAU;;AAC3C,MAAI,MAAM,IAAV;AACA,MAAI,QAAQ,IAAI,WAAhB;;;AAGA,MAAI,UAAU,MAAV,KAAqB,CAArB,IAA0B,MAAM,IAAN,CAAW,OAAX,EAAoB,QAApB,CAA9B,EAA6D;AAC3D,eAAW,OAAX;AACA,cAAU,EAAV;AACD;;AAED,IAAE,MAAF,CAAS,OAAT,EAAkB;AAChB,YAAQ,MAAM,kBAAN,EADQ;AAEhB,sBAAkB;AAFF,GAAlB;;AAKA,MAAI,QAAJ,CAAa,OAAb,EAAsB,QAAtB;AACD;;AAED,eAAe,WAAf","file":"/packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js.map","sourcesContent":["import _ from 'lodash';\n\nfunction validateAll(options = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  _.extend(options, {\n    fields: Class.getValidationOrder(),\n    stopOnFirstError: false\n  });\n\n  doc.validate(options, callback);\n};\n\nexport default validateAll;"]},"hash":"27709d7012bccdbd64ca2c9bc2786c59396eb27e"}
