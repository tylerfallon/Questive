{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../core/utils/throw_parse_error.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"throwParseError"}]},{"source":"../behavior.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Behavior"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"parse_definition"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var throwParseError;module.import('../../core/utils/throw_parse_error.js',{\"default\":function(v){throwParseError=v}});var Behavior;module.import('../behavior.js',{\"default\":function(v){Behavior=v}});\n\n\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence of the \"behaviors\" property.\n\tif (definition.behaviors !== undefined) {\n\t\tif (!Match.test(definition.behaviors, Match.OneOf([String], Object))) {\n\t\t\tthrowParseError([{\n\t\t\t\t'class': className\n\t\t\t}, {\n\t\t\t\t'property': 'behaviors'\n\t\t\t}, 'Behaviors definition has to be an array of behaviors\\' names or an ' + 'object with behaviors\\' options']);\n\t\t}\n\t\t_.each(definition.behaviors, function (behaviorOptions, behaviorName) {\n\t\t\t// If we deal with an array of behaviors' names, then behavior options is\n\t\t\t// an empty object.\n\t\t\tif (_.isString(behaviorOptions)) {\n\t\t\t\tbehaviorName = behaviorOptions;\n\t\t\t\tbehaviorOptions = [{}];\n\t\t\t}\n\t\t\t// Check if behavior with a given name exists.\n\t\t\tif (!Behavior.has(behaviorName)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'behavior': behaviorName\n\t\t\t\t}, 'Behavior does not exist']);\n\t\t\t}\n\t\t\t// Behavior options has to be an object or an array of objects, when we\n\t\t\t// are adding multiple behaviors of the same type.\n\t\t\tif (!Match.test(behaviorOptions, Match.OneOf(Object, [Object]))) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'behavior': behaviorName\n\t\t\t\t}, 'Behavior options have to be an object or an array of objects']);\n\t\t\t}\n\t\t\t// Make sure that behavior options is an array of objects.\n\t\t\tif (!Match.test(behaviorOptions, Array)) {\n\t\t\t\tbehaviorOptions = [behaviorOptions];\n\t\t\t}\n\t\t\tparsedDefinition.behaviors[behaviorName] = behaviorOptions;\n\t\t});\n\t}\n};\n\nmodule.export(\"default\",exports.default=(onParseDefinition));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,eAAP,MAA4B,uCAA5B;AACA,OAAO,QAAP,MAAqB,gBAArB;;AAEA,SAAS,iBAAT,CAA2B,gBAA3B,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE;;AAEnE,KAAI,WAAW,SAAX,KAAyB,SAA7B,EAAwC;AACvC,MAAI,CAAC,MAAM,IAAN,CAAW,WAAW,SAAtB,EAAiC,MAAM,KAAN,CAAY,CAAC,MAAD,CAAZ,EAAsB,MAAtB,CAAjC,CAAL,EAAsE;AACrE,mBAAgB,CAAC;AACf,aAAS;AADM,IAAD,EAEZ;AACF,gBAAY;AADV,IAFY,EAKf,yGALe,CAAhB;AAQA;AACD,IAAE,IAAF,CAAO,WAAW,SAAlB,EAA6B,UAAS,eAAT,EAA0B,YAA1B,EAAwC;;;AAGpE,OAAI,EAAE,QAAF,CAAW,eAAX,CAAJ,EAAiC;AAChC,mBAAe,eAAf;AACA,sBAAkB,CAAC,EAAD,CAAlB;AACA;;AAED,OAAI,CAAC,SAAS,GAAT,CAAa,YAAb,CAAL,EAAiC;AAChC,oBAAgB,CAAC;AACf,cAAS;AADM,KAAD,EAEZ;AACF,iBAAY;AADV,KAFY,EAKf,yBALe,CAAhB;AAOA;;;AAGD,OAAI,CAAC,MAAM,IAAN,CAAW,eAAX,EAA4B,MAAM,KAAN,CAAY,MAAZ,EAAoB,CAAC,MAAD,CAApB,CAA5B,CAAL,EAAiE;AAChE,oBAAgB,CAAC;AACf,cAAS;AADM,KAAD,EAEZ;AACF,iBAAY;AADV,KAFY,EAKf,8DALe,CAAhB;AAOA;;AAED,OAAI,CAAC,MAAM,IAAN,CAAW,eAAX,EAA4B,KAA5B,CAAL,EAAyC;AACxC,sBAAkB,CAAC,eAAD,CAAlB;AACA;AACD,oBAAiB,SAAjB,CAA2B,YAA3B,IAA2C,eAA3C;AACA,GAjCD;AAkCA;AACD;;AAED,eAAe,iBAAf","file":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js.map","sourcesContent":["import _ from 'lodash';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Behavior from '../behavior.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\t// Check existence of the \"behaviors\" property.\n\tif (definition.behaviors !== undefined) {\n\t\tif (!Match.test(definition.behaviors, Match.OneOf([String], Object))) {\n\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'property': 'behaviors'\n\t\t\t\t},\n\t\t\t\t`Behaviors definition has to be an array of behaviors' names or an ` +\n\t\t\t\t`object with behaviors' options`\n\t\t\t]);\n\t\t}\n\t\t_.each(definition.behaviors, function(behaviorOptions, behaviorName) {\n\t\t\t// If we deal with an array of behaviors' names, then behavior options is\n\t\t\t// an empty object.\n\t\t\tif (_.isString(behaviorOptions)) {\n\t\t\t\tbehaviorName = behaviorOptions;\n\t\t\t\tbehaviorOptions = [{}];\n\t\t\t}\n\t\t\t// Check if behavior with a given name exists.\n\t\t\tif (!Behavior.has(behaviorName)) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'behavior': behaviorName\n\t\t\t\t\t},\n\t\t\t\t\t'Behavior does not exist'\n\t\t\t\t]);\n\t\t\t}\n\t\t\t// Behavior options has to be an object or an array of objects, when we\n\t\t\t// are adding multiple behaviors of the same type.\n\t\t\tif (!Match.test(behaviorOptions, Match.OneOf(Object, [Object]))) {\n\t\t\t\tthrowParseError([{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'behavior': behaviorName\n\t\t\t\t\t},\n\t\t\t\t\t'Behavior options have to be an object or an array of objects'\n\t\t\t\t]);\n\t\t\t}\n\t\t\t// Make sure that behavior options is an array of objects.\n\t\t\tif (!Match.test(behaviorOptions, Array)) {\n\t\t\t\tbehaviorOptions = [behaviorOptions];\n\t\t\t}\n\t\t\tparsedDefinition.behaviors[behaviorName] = behaviorOptions;\n\t\t});\n\t}\n};\n\nexport default onParseDefinition;"]},"hash":"d794391b3197548a1fe98ffc04f860cb9bba813a"}
