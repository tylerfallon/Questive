{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/react-runtime/react-runtime-prod-tests.jsx","filenameRelative":"/packages/react-runtime/react-runtime-prod-tests.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/react-runtime/react-runtime-prod-tests.jsx.map","sourceFileName":"/packages/react-runtime/react-runtime-prod-tests.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"react-runtime-prod-tests"},"ignored":false,"code":"// Note that we can't run these tests right now due to https://github.com/meteor/meteor/issues/6401\n// But it's useful to have them here for reference (you can run them in a browser console in\n//   and app that includes this package, running in `--production`)\n\nvar React = ReactProd;\nvar ReactDOM = ReactDOMProd;\n\nvar ComponentWithRequiredProp = React.createClass({\n  displayName: \"ComponentWithRequiredProp\",\n\n  propTypes: {\n    requiredString: React.PropTypes.string.isRequired\n  },\n  render: function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Nothing useful here...\"\n      );\n    }\n\n    return render;\n  }()\n});\n\nTinytest.add('react-runtime-prod - is actually the production version', function (test) {\n  // Make sure we don't have debug-only addons\n  test.isUndefined(React.addons.TestUtils);\n  test.isUndefined(React.addons.Perf);\n\n  // Check if we print an error to console about props\n  // You can be sure this test is correct because we have an identical one in\n  // react-runtime-dev\n  var error = void 0;\n  try {\n    var oldError = console.error;\n    console.error = function () {\n      function specialError(message) {\n        error = message;\n      }\n\n      return specialError;\n    }();\n\n    var div = document.createElement(\"DIV\");\n    ReactDOM.render(React.createElement(ComponentWithRequiredProp, null), div);\n\n    test.isUndefined(error);\n  } finally {\n    console.error = oldError;\n  }\n\n  // It should throw when style is not an object\n  var div = document.createElement(\"DIV\");\n  try {\n    ReactDOM.render(React.createElement(\"div\", { style: \"mystyle\" }), div);\n  } catch (e) {\n    // The production build doesn't have the error message\n    test.matches(e.message, /^Minified exception/);\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/react-runtime/react-runtime-prod-tests.jsx"],"names":[],"mappings":";;;;AAIA,IAAI,QAAQ,SAAZ;AACA,IAAI,WAAW,YAAf;;AAEA,IAAI,4BAA4B,MAAM,WAAN,CAAkB;AAAA;;AAChD,aAAW;AACT,oBAAgB,MAAM,SAAN,CAAgB,MAAhB,CAAuB;AAD9B,GADqC;AAIhD,QAJgD;AAAA,sBAIvC;AACP,aACE;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AAR+C;AAAA;AAAA,CAAlB,CAAhC;;AAWA,SAAS,GAAT,CAAa,yDAAb,EAAwE,UAAU,IAAV,EAAgB;;AAEtF,OAAK,WAAL,CAAiB,MAAM,MAAN,CAAa,SAA9B;AACA,OAAK,WAAL,CAAiB,MAAM,MAAN,CAAa,IAA9B;;;;;AAKA,MAAI,cAAJ;AACA,MAAI;AACF,QAAI,WAAW,QAAQ,KAAvB;AACA,YAAQ,KAAR;AAAgB,eAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7C,gBAAQ,OAAR;AACD;;AAFD,aAAyB,YAAzB;AAAA;;AAIA,QAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,aAAS,MAAT,CAAgB,oBAAC,yBAAD,OAAhB,EAA+C,GAA/C;;AAEA,SAAK,WAAL,CAAiB,KAAjB;AACD,GAVD,SAUU;AACR,YAAQ,KAAR,GAAgB,QAAhB;AACD;;;AAGD,MAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,MAAI;AACF,aAAS,MAAT,CAAgB,6BAAK,OAAM,SAAX,GAAhB,EAAyC,GAAzC;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;;AAEV,SAAK,OAAL,CAAa,EAAE,OAAf,EAAwB,qBAAxB;AACD;AACF,CA/BD","file":"/packages/react-runtime/react-runtime-prod-tests.jsx.map","sourcesContent":["// Note that we can't run these tests right now due to https://github.com/meteor/meteor/issues/6401\n// But it's useful to have them here for reference (you can run them in a browser console in\n//   and app that includes this package, running in `--production`)\n\nvar React = ReactProd;\nvar ReactDOM = ReactDOMProd;\n\nvar ComponentWithRequiredProp = React.createClass({\n  propTypes: {\n    requiredString: React.PropTypes.string.isRequired\n  },\n  render() {\n    return (\n      <div>Nothing useful here...</div>\n    );\n  }\n});\n\nTinytest.add('react-runtime-prod - is actually the production version', function (test) {\n  // Make sure we don't have debug-only addons\n  test.isUndefined(React.addons.TestUtils);\n  test.isUndefined(React.addons.Perf);\n\n  // Check if we print an error to console about props\n  // You can be sure this test is correct because we have an identical one in\n  // react-runtime-dev\n  let error;\n  try {\n    var oldError = console.error;\n    console.error = function specialError(message) {\n      error = message;\n    };\n\n    var div = document.createElement(\"DIV\");\n    ReactDOM.render(<ComponentWithRequiredProp />, div);\n\n    test.isUndefined(error);\n  } finally {\n    console.error = oldError;\n  }\n\n  // It should throw when style is not an object\n  var div = document.createElement(\"DIV\");\n  try {\n    ReactDOM.render(<div style=\"mystyle\" />, div);\n  } catch (e) {\n    // The production build doesn't have the error message\n    test.matches(e.message, /^Minified exception/);\n  }\n});\n"]},"hash":"80b08c827b59f748e9ff46a2d30a1061d78d348e"}
