{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../validator.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validator"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"length"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var Validator;module.import('../../validator.js',{\"default\":function(v){Validator=v}});\n\n\nValidator.create({\n  name: 'length',\n  parseParam: function parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError('Parameter for the \"length\" validator has to be a number');\n    }\n  },\n  isValid: function isValid(_ref) {\n    var value = _ref.value;\n    var param = _ref.param;\n\n    if (!_.has(value, 'length')) {\n      throw new TypeError('Length of the value can not be measured');\n    }\n    return value.length === param;\n  },\n  resolveError: function resolveError(_ref2) {\n    var name = _ref2.name;\n    var param = _ref2.param;\n\n    return 'Length of \"' + name + '\" has to be ' + param;\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,SAAP,MAAsB,oBAAtB;;AAEA,UAAU,MAAV,CAAiB;AACf,QAAM,QADS;AAEf,YAFe,sBAEJ,KAFI,EAEG;AAChB,QAAI,CAAC,MAAM,IAAN,CAAW,KAAX,EAAkB,MAAlB,CAAL,EAAgC;AAC9B,YAAM,IAAI,SAAJ,2DAAN;AAGD;AACF,GARc;AASf,SATe,yBASW;AAAA,QAAhB,KAAgB,QAAhB,KAAgB;AAAA,QAAT,KAAS,QAAT,KAAS;;AACxB,QAAI,CAAC,EAAE,GAAF,CAAM,KAAN,EAAa,QAAb,CAAL,EAA6B;AAC3B,YAAM,IAAI,SAAJ,2CAAN;AAGD;AACD,WAAO,MAAM,MAAN,KAAiB,KAAxB;AACD,GAhBc;AAiBf,cAjBe,+BAiBe;AAAA,QAAf,IAAe,SAAf,IAAe;AAAA,QAAT,KAAS,SAAT,KAAS;;AAC5B,2BAAqB,IAArB,oBAAwC,KAAxC;AACD;AAnBc,CAAjB","file":"/packages/jagi:astronomy/lib/modules/validators/validators/size/length.js.map","sourcesContent":["import _ from 'lodash';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'length',\n  parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\n        `Parameter for the \"length\" validator has to be a number`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    if (!_.has(value, 'length')) {\n      throw new TypeError(\n        `Length of the value can not be measured`\n      );\n    }\n    return value.length === param;\n  },\n  resolveError({ name, param }) {\n    return `Length of \"${name}\" has to be ${param}`;\n  }\n});"]},"hash":"11595f3e700a440557c9ff1341e49afc9fc13de3"}
