{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/api/scavenger_hunts.js","filenameRelative":"/imports/api/scavenger_hunts.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/scavenger_hunts.js.map","sourceFileName":"/imports/api/scavenger_hunts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"scavenger_hunts"},"ignored":false,"code":"// import { Meteor } from 'meteor/meteor';\n// import { Mongo } from 'meteor/mongo';\n// import { check } from 'meteor/check';\n\n// export const Scavenger_Hunts = new Mongo.Collection('scavenger_hunts');\n\n// if(Meteor.isServer){\n// \tMeteor.publish('scavenger_hunts',function scavenger_huntsPublication(){\n// \t\treturn Scavenger_Hunts.find({})\n// \t})\n// }\n// Meteor.methods({\n//   // add information to our task db\n//   'scavenger_hunts.insert'(object) {\n//     let title = object.title;\n//     let user\n//     check(title, String)\n\n//     // Make sure the user is logged in before inserting a task\n//     if (! this.userId) {\n//       throw new Meteor.Error('not-authorized');\n//     }\n\n//     Scavenger_Hunts.insert({\n//       title,\n//       createdAt: new Date(),\n//       owner: this.userId,\n//       username: Meteor.users.findOne(this.userId).username,\n//     });\n//   },\n\n//   'scavenger_hunts.remove'(scavengerId) {\n//     check(taskId, String);\n\n//     const task = scavenger_hunts.findOne(taskId);\n//     if (task.private && task.owner !== this.userId) {\n//       // If the task is private, make sure only the owner can delete it\n//       throw new Meteor.Error('not-authorized');\n//     }\n//     Scavenger_Hunts.remove(scavengerId);\n//   },\n\n// } ) ;","ast":null,"map":{"version":3,"sources":[],"names":[],"mappings":"","file":"/imports/api/scavenger_hunts.js.map","sourcesContent":[]},"hash":"3d5fd448b848314a6b0c4935e7742256feed8d79"}
