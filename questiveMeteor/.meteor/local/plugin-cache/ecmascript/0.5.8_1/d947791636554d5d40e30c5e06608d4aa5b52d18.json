{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/react-runtime/react-runtime-dev-tests.jsx","filenameRelative":"/packages/react-runtime/react-runtime-dev-tests.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/react-runtime/react-runtime-dev-tests.jsx.map","sourceFileName":"/packages/react-runtime/react-runtime-dev-tests.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"react-runtime-dev-tests"},"ignored":false,"code":"// Note that we can't run these tests right now due to https://github.com/meteor/meteor/issues/6401\n// But it's useful to have them here for reference (you can run them in a browser console in\n//   and app that includes this package)\n\nvar React = Package[\"react-runtime-dev\"].ReactDev;\nvar ReactDOM = Package[\"react-runtime-dev\"].ReactDOMDev;\n\nvar ComponentWithRequiredProp = React.createClass({\n  displayName: \"ComponentWithRequiredProp\",\n\n  propTypes: {\n    requiredString: React.PropTypes.string.isRequired\n  },\n  render: function render() {\n    return React.createElement(\n      \"div\",\n      null,\n      \"Nothing useful here...\"\n    );\n  }\n});\n\nTinytest.add('react-runtime-dev - is actually the development version', function (test) {\n  // Make sure we don't have debug-only addons\n  test.isNotUndefined(React.addons.TestUtils);\n  test.isNotUndefined(React.addons.Perf);\n\n  // Check if we print an error to console about props\n  var error = void 0;\n\n  var oldError = console.error;\n  try {\n    console.error = function specialError(message) {\n      error = message;\n    };\n\n    var div = document.createElement(\"DIV\");\n    ReactDOM.render(React.createElement(ComponentWithRequiredProp, null), div);\n\n    test.isNotUndefined(error);\n  } finally {\n    console.error = oldError;\n  }\n\n  // It should throw when style is not an object\n  var div = document.createElement(\"DIV\");\n  try {\n    ReactDOM.render(React.createElement(\"div\", { style: \"mystyle\" }), div);\n  } catch (e) {\n    // The development build has the right error message\n    test.matches(e.message, /^Invariant Violation/);\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/react-runtime/react-runtime-dev-tests.jsx"],"names":[],"mappings":";;;;AAIA,IAAI,QAAQ,QAAQ,mBAAR,EAA6B,QAAzC;AACA,IAAI,WAAW,QAAQ,mBAAR,EAA6B,WAA5C;;AAEA,IAAI,4BAA4B,MAAM,WAAN,CAAkB;AAAA;;AAChD,aAAW;AACT,oBAAgB,MAAM,SAAN,CAAgB,MAAhB,CAAuB;AAD9B,GADqC;AAIhD,QAJgD,oBAIvC;AACP,WACE;AAAA;AAAA;AAAA;AAAA,KADF;AAGD;AAR+C,CAAlB,CAAhC;;AAWA,SAAS,GAAT,CAAa,yDAAb,EAAwE,UAAU,IAAV,EAAgB;;AAEtF,OAAK,cAAL,CAAoB,MAAM,MAAN,CAAa,SAAjC;AACA,OAAK,cAAL,CAAoB,MAAM,MAAN,CAAa,IAAjC;;;AAGA,MAAI,cAAJ;;AAEA,MAAI,WAAW,QAAQ,KAAvB;AACA,MAAI;AACF,YAAQ,KAAR,GAAgB,SAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7C,cAAQ,OAAR;AACD,KAFD;;AAIA,QAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,aAAS,MAAT,CAAgB,oBAAC,yBAAD,OAAhB,EAA+C,GAA/C;;AAEA,SAAK,cAAL,CAAoB,KAApB;AACD,GATD,SASU;AACR,YAAQ,KAAR,GAAgB,QAAhB;AACD;;;AAGD,MAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,MAAI;AACF,aAAS,MAAT,CAAgB,6BAAK,OAAM,SAAX,GAAhB,EAAyC,GAAzC;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;;AAEV,SAAK,OAAL,CAAa,EAAE,OAAf,EAAwB,sBAAxB;AACD;AACF,CA9BD","file":"/packages/react-runtime/react-runtime-dev-tests.jsx.map","sourcesContent":["// Note that we can't run these tests right now due to https://github.com/meteor/meteor/issues/6401\n// But it's useful to have them here for reference (you can run them in a browser console in\n//   and app that includes this package)\n\nvar React = Package[\"react-runtime-dev\"].ReactDev;\nvar ReactDOM = Package[\"react-runtime-dev\"].ReactDOMDev;\n\nvar ComponentWithRequiredProp = React.createClass({\n  propTypes: {\n    requiredString: React.PropTypes.string.isRequired\n  },\n  render() {\n    return (\n      <div>Nothing useful here...</div>\n    );\n  }\n});\n\nTinytest.add('react-runtime-dev - is actually the development version', function (test) {\n  // Make sure we don't have debug-only addons\n  test.isNotUndefined(React.addons.TestUtils);\n  test.isNotUndefined(React.addons.Perf);\n\n  // Check if we print an error to console about props\n  let error;\n\n  var oldError = console.error;\n  try {\n    console.error = function specialError(message) {\n      error = message;\n    };\n\n    var div = document.createElement(\"DIV\");\n    ReactDOM.render(<ComponentWithRequiredProp />, div);\n\n    test.isNotUndefined(error);\n  } finally {\n    console.error = oldError;\n  }\n\n  // It should throw when style is not an object\n  var div = document.createElement(\"DIV\");\n  try {\n    ReactDOM.render(<div style=\"mystyle\" />, div);\n  } catch (e) {\n    // The development build has the right error message\n    test.matches(e.message, /^Invariant Violation/);\n  }\n});\n"]},"hash":"d947791636554d5d40e30c5e06608d4aa5b52d18"}
