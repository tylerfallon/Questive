{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/jagi:astronomy","imported":["Class"],"specifiers":[{"kind":"named","imported":"Class","local":"Class"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/core/inherit.js","filenameRelative":"/packages/jagi:astronomy/test/core/inherit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/core/inherit.js.map","sourceFileName":"/packages/jagi:astronomy/test/core/inherit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"inherit"},"ignored":false,"code":"var Class;module.import('meteor/jagi:astronomy',{\"Class\":function(v){Class=v}});\n\nTinytest.add('Core - Inherit', function (test) {\n  reset();\n\n  var Parent = Class.create({\n    name: 'Parent',\n    fields: {\n      parentField: {\n        type: String\n      }\n    },\n    methods: {\n      parentMethod: function () {\n        function parentMethod() {}\n\n        return parentMethod;\n      }()\n    },\n    events: {\n      afterInit: function () {\n        function afterInit() {}\n\n        return afterInit;\n      }()\n    }\n  });\n\n  var Child = Parent.inherit({\n    name: 'Child',\n    fields: {\n      childField: {\n        type: String\n      }\n    },\n    methods: {\n      childMethod: function () {\n        function childMethod() {}\n\n        return childMethod;\n      }()\n    },\n    events: {\n      afterInit: function () {\n        function afterInit() {}\n\n        return afterInit;\n      }()\n    }\n  });\n\n  // Fields.\n  test.instanceOf(Child.getField('parentField'), Astro.Field, 'The child class should inherit parent fields');\n  test.instanceOf(Child.getField('childField'), Astro.Field, 'The child class should have its own fields');\n\n  // Methods.\n  test.instanceOf(Child.getMethod('parentMethod'), Function, 'The child class should inherit parent methods');\n  test.instanceOf(Child.getMethod('childMethod'), Function, 'The child class should have its own methods');\n\n  // Events.\n  test.equal(Child.getEvents('afterInit').length, 2, 'The child class should have two \"afterInit\" event handlers');\n\n  // Instance check.\n  var child = new Child();\n  test.instanceOf(child, Parent, 'An instance of the child class should be also instance of the parent class');\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/core/inherit.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,uBAAtB;;AAEA,SAAS,GAAT,CAAa,gBAAb,EAA+B,UAAS,IAAT,EAAe;AAC5C;;AAEA,MAAM,SAAS,MAAM,MAAN,CAAa;AAC1B,UAAM,QADoB;AAE1B,YAAQ;AACN,mBAAa;AACX,cAAM;AADK;AADP,KAFkB;AAO1B,aAAS;AACP,kBADO;AAAA,gCACQ,CAAE;;AADV;AAAA;AAAA,KAPiB;AAU1B,YAAQ;AACN,eADM;AAAA,6BACM,CAAE;;AADR;AAAA;AAAA;AAVkB,GAAb,CAAf;;AAeA,MAAM,QAAQ,OAAO,OAAP,CAAe;AAC3B,UAAM,OADqB;AAE3B,YAAQ;AACN,kBAAY;AACV,cAAM;AADI;AADN,KAFmB;AAO3B,aAAS;AACP,iBADO;AAAA,+BACO,CAAE;;AADT;AAAA;AAAA,KAPkB;AAU3B,YAAQ;AACN,eADM;AAAA,6BACM,CAAE;;AADR;AAAA;AAAA;AAVmB,GAAf,CAAd;;;AAgBA,OAAK,UAAL,CAAgB,MAAM,QAAN,CAAe,aAAf,CAAhB,EAA+C,MAAM,KAArD,EACE,8CADF;AAGA,OAAK,UAAL,CAAgB,MAAM,QAAN,CAAe,YAAf,CAAhB,EAA8C,MAAM,KAApD,EACE,4CADF;;;AAKA,OAAK,UAAL,CAAgB,MAAM,SAAN,CAAgB,cAAhB,CAAhB,EAAiD,QAAjD,EACE,+CADF;AAGA,OAAK,UAAL,CAAgB,MAAM,SAAN,CAAgB,aAAhB,CAAhB,EAAgD,QAAhD,EACE,6CADF;;;AAKA,OAAK,KAAL,CAAW,MAAM,SAAN,CAAgB,WAAhB,EAA6B,MAAxC,EAAgD,CAAhD,EACE,4DADF;;;AAKA,MAAM,QAAQ,IAAI,KAAJ,EAAd;AACA,OAAK,UAAL,CAAgB,KAAhB,EAAuB,MAAvB,EACE,4EADF;AAGD,CA3DD","file":"/packages/jagi:astronomy/test/core/inherit.js.map","sourcesContent":["import { Class } from 'meteor/jagi:astronomy';\n\nTinytest.add('Core - Inherit', function(test) {\n  reset();\n\n  const Parent = Class.create({\n    name: 'Parent',\n    fields: {\n      parentField: {\n        type: String\n      }\n    },\n    methods: {\n      parentMethod() {}\n    },\n    events: {\n      afterInit() {}\n    }\n  });\n\n  const Child = Parent.inherit({\n    name: 'Child',\n    fields: {\n      childField: {\n        type: String\n      }\n    },\n    methods: {\n      childMethod() {}\n    },\n    events: {\n      afterInit() {}\n    }\n  });\n\n  // Fields.\n  test.instanceOf(Child.getField('parentField'), Astro.Field,\n    'The child class should inherit parent fields'\n  );\n  test.instanceOf(Child.getField('childField'), Astro.Field,\n    'The child class should have its own fields'\n  );\n\n  // Methods.\n  test.instanceOf(Child.getMethod('parentMethod'), Function,\n    'The child class should inherit parent methods'\n  );\n  test.instanceOf(Child.getMethod('childMethod'), Function,\n    'The child class should have its own methods'\n  );\n\n  // Events.\n  test.equal(Child.getEvents('afterInit').length, 2,\n    'The child class should have two \"afterInit\" event handlers'\n  );\n\n  // Instance check.\n  const child = new Child();\n  test.instanceOf(child, Parent,\n    'An instance of the child class should be also instance of the parent class'\n  );\n});"]},"hash":"4e2b994250f59afc0a84dcd3f64dece41d391963"}
