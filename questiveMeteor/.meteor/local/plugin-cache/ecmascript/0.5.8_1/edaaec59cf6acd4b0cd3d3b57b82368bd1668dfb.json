{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/mdg:validation-error/validation-error.js","filenameRelative":"/packages/mdg:validation-error/validation-error.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/mdg:validation-error/validation-error.js.map","sourceFileName":"/packages/mdg:validation-error/validation-error.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"validation-error"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});\n\n\n// The \"details\" property of the ValidationError must be an array of objects\n// containing at least two properties. The \"name\" and \"type\" properties are\n// required.\nvar errorsPattern = [Match.ObjectIncluding({\n  name: String,\n  type: String\n})];\n\nValidationError = function (_Meteor$Error) {\n  _inherits(_class, _Meteor$Error);\n\n  function _class(errors) {\n    var _this, _ret;\n\n    var message = arguments.length <= 1 || arguments[1] === undefined ? ValidationError.DEFAULT_MESSAGE : arguments[1];\n\n    _classCallCheck(this, _class);\n\n    check(errors, errorsPattern);\n    check(message, String);\n\n    return _ret = (_this = _possibleConstructorReturn(this, _Meteor$Error.call(this, ValidationError.ERROR_CODE, message, errors)), _this), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // Static method checking if a given Meteor.Error is an instance of\n  // ValidationError.\n\n\n  _class.is = function () {\n    function is(err) {\n      return err instanceof Meteor.Error && err.error === ValidationError.ERROR_CODE;\n    }\n\n    return is;\n  }();\n\n  return _class;\n}(Meteor.Error);\n\n// Universal validation error code to be use in applications and packages.\nValidationError.ERROR_CODE = 'validation-error';\n// Default validation error message that can be changed globally.\nValidationError.DEFAULT_MESSAGE = 'Validation failed';","ast":null,"map":{"version":3,"sources":["/packages/mdg:validation-error/validation-error.js"],"names":[],"mappings":";;;;;;AAGA,IAAM,gBAAgB,CAAC,MAAM,eAAN,CAAsB;AAC3C,QAAM,MADqC;AAE3C,QAAM;AAFqC,CAAtB,CAAD,CAAtB;;AAKA;AAAA;;AACE,kBAAY,MAAZ,EAA+D;AAAA;;AAAA,QAA3C,OAA2C,yDAAjC,gBAAgB,eAAiB;;AAAA;;AAC7D,UAAM,MAAN,EAAc,aAAd;AACA,UAAM,OAAN,EAAe,MAAf;;AAEA,4DAAO,yBAAM,gBAAgB,UAAtB,EAAkC,OAAlC,EAA2C,MAA3C,CAAP;AACD;;;;;;AANH,SAUS,EAVT;AAAA,gBAUY,GAVZ,EAUiB;AACb,aAAO,eAAe,OAAO,KAAtB,IAA+B,IAAI,KAAJ,KAAc,gBAAgB,UAApE;AACD;;AAZH;AAAA;;AAAA;AAAA,EAAgC,OAAO,KAAvC;;;AAgBA,gBAAgB,UAAhB,GAA6B,kBAA7B;;AAEA,gBAAgB,eAAhB,GAAkC,mBAAlC","file":"/packages/mdg:validation-error/validation-error.js.map","sourcesContent":["// The \"details\" property of the ValidationError must be an array of objects\n// containing at least two properties. The \"name\" and \"type\" properties are\n// required.\nconst errorsPattern = [Match.ObjectIncluding({\n  name: String,\n  type: String\n})];\n\nValidationError = class extends Meteor.Error {\n  constructor(errors, message = ValidationError.DEFAULT_MESSAGE) {\n    check(errors, errorsPattern);\n    check(message, String);\n\n    return super(ValidationError.ERROR_CODE, message, errors);\n  }\n\n  // Static method checking if a given Meteor.Error is an instance of\n  // ValidationError.\n  static is(err) {\n    return err instanceof Meteor.Error && err.error === ValidationError.ERROR_CODE;\n  };\n};\n\n// Universal validation error code to be use in applications and packages.\nValidationError.ERROR_CODE = 'validation-error';\n// Default validation error message that can be changed globally.\nValidationError.DEFAULT_MESSAGE = 'Validation failed';\n"]},"hash":"edaaec59cf6acd4b0cd3d3b57b82368bd1668dfb"}
