{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../../validator.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validator"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"max_length"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var Validator;module.import('../../validator.js',{\"default\":function(v){Validator=v}});\n\n\nValidator.create({\n  name: 'maxLength',\n  parseParam: function () {\n    function parseParam(param) {\n      if (!Match.test(param, Number)) {\n        throw new TypeError('Parameter for the \"maxLength\" validator has to be a number');\n      }\n    }\n\n    return parseParam;\n  }(),\n  isValid: function () {\n    function isValid(_ref) {\n      var value = _ref.value;\n      var param = _ref.param;\n\n      if (!_.has(value, 'length')) {\n        return false;\n      }\n      return value.length <= param;\n    }\n\n    return isValid;\n  }(),\n  resolveError: function () {\n    function resolveError(_ref2) {\n      var name = _ref2.name;\n      var param = _ref2.param;\n\n      return 'Length of \"' + name + '\" has to be at most ' + param;\n    }\n\n    return resolveError;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,SAAP,MAAsB,oBAAtB;;AAEA,UAAU,MAAV,CAAiB;AACf,QAAM,WADS;AAEf,YAFe;AAAA,wBAEJ,KAFI,EAEG;AAChB,UAAI,CAAC,MAAM,IAAN,CAAW,KAAX,EAAkB,MAAlB,CAAL,EAAgC;AAC9B,cAAM,IAAI,SAAJ,8DAAN;AAGD;AACF;;AARc;AAAA;AASf,SATe;AAAA,2BASW;AAAA,UAAhB,KAAgB,QAAhB,KAAgB;AAAA,UAAT,KAAS,QAAT,KAAS;;AACxB,UAAI,CAAC,EAAE,GAAF,CAAM,KAAN,EAAa,QAAb,CAAL,EAA6B;AAC3B,eAAO,KAAP;AACD;AACD,aAAO,MAAM,MAAN,IAAgB,KAAvB;AACD;;AAdc;AAAA;AAef,cAfe;AAAA,iCAee;AAAA,UAAf,IAAe,SAAf,IAAe;AAAA,UAAT,KAAS,SAAT,KAAS;;AAC5B,6BAAqB,IAArB,4BAAgD,KAAhD;AACD;;AAjBc;AAAA;AAAA,CAAjB","file":"/packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js.map","sourcesContent":["import _ from 'lodash';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'maxLength',\n  parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\n        `Parameter for the \"maxLength\" validator has to be a number`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    if (!_.has(value, 'length')) {\n      return false;\n    }\n    return value.length <= param;\n  },\n  resolveError({ name, param }) {\n    return `Length of \"${name}\" has to be at most ${param}`;\n  }\n});"]},"hash":"667290381ee5ba177bf6d49ba33dc7343a6541b9"}
