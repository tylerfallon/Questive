{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/jagi:astronomy","imported":["Class"],"specifiers":[{"kind":"named","imported":"Class","local":"Class"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/modules/storage/reload.js","filenameRelative":"/packages/jagi:astronomy/test/modules/storage/reload.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/modules/storage/reload.js.map","sourceFileName":"/packages/jagi:astronomy/test/modules/storage/reload.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"reload"},"ignored":false,"code":"var Class;module.import('meteor/jagi:astronomy',{\"Class\":function(v){Class=v}});\n\nTinytest.add('Modules - Storage - Reload', function (test) {\n  var Storage = Class.get('Storage');\n\n  var id = '6tMS79Kx6WhqTEwaC';\n  var storage = new Storage({\n    _id: id,\n    one: {\n      string: 'abc',\n      immutable: 'immutable'\n    },\n    many: [{\n      string: 'abc',\n      immutable: 'immutable'\n    }],\n    numbers: [1, 2, 3],\n    string: 'abc',\n    number: 123,\n    boolean: true,\n    date: new Date(2000, 0, 1, 0, 0, 0, 0),\n    immutable: 'immutable'\n  });\n  storage.save();\n\n  // Modify document.\n  storage.one = {\n    string: 'cba',\n    immutable: 'IMMUTABLE'\n  };\n  storage.many = [{\n    string: 'cba',\n    immutable: 'IMMUTABLE'\n  }];\n  storage.numbers = [3, 2, 1];\n  storage.anything = {\n    string: 'cba'\n  };\n  storage.string = 'cba';\n  storage.number = 321;\n  storage.boolean = false;\n  storage.date = new Date(2001, 0, 1, 0, 0, 0, 0);\n  storage.immutable = 'IMMUTABLE';\n  storage.reload();\n\n  test.isTrue(EJSON.equals(storage, Storage.findOne(id)), 'Document should be reloaded to the original state');\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/modules/storage/reload.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,uBAAtB;;AAEA,SAAS,GAAT,CAAa,4BAAb,EAA2C,UAAS,IAAT,EAAe;AACxD,MAAM,UAAU,MAAM,GAAN,CAAU,SAAV,CAAhB;;AAED,MAAM,KAAK,mBAAX;AACC,MAAM,UAAU,IAAI,OAAJ,CAAY;AAC5B,SAAK,EADuB;AAE1B,SAAK;AACH,cAAQ,KADL;AAEH,iBAAW;AAFR,KAFqB;AAM1B,UAAM,CAAC;AACL,cAAQ,KADH;AAEL,iBAAW;AAFN,KAAD,CANoB;AAU1B,aAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAViB;AAW1B,YAAQ,KAXkB;AAY1B,YAAQ,GAZkB;AAa1B,aAAS,IAbiB;AAc1B,UAAM,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAdoB;AAe1B,eAAW;AAfe,GAAZ,CAAhB;AAiBA,UAAQ,IAAR;;;AAGA,UAAQ,GAAR,GAAc;AACZ,YAAQ,KADI;AAEZ,eAAW;AAFC,GAAd;AAIA,UAAQ,IAAR,GAAe,CAAC;AACd,YAAQ,KADM;AAEd,eAAW;AAFG,GAAD,CAAf;AAIA,UAAQ,OAAR,GAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB;AACA,UAAQ,QAAR,GAAmB;AACjB,YAAQ;AADS,GAAnB;AAGA,UAAQ,MAAR,GAAiB,KAAjB;AACA,UAAQ,MAAR,GAAiB,GAAjB;AACA,UAAQ,OAAR,GAAkB,KAAlB;AACA,UAAQ,IAAR,GAAe,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAAf;AACA,UAAQ,SAAR,GAAoB,WAApB;AACA,UAAQ,MAAR;;AAEA,OAAK,MAAL,CAAY,MAAM,MAAN,CAAa,OAAb,EAAsB,QAAQ,OAAR,CAAgB,EAAhB,CAAtB,CAAZ,EACE,mDADF;AAGD,CA9CD","file":"/packages/jagi:astronomy/test/modules/storage/reload.js.map","sourcesContent":["import { Class } from 'meteor/jagi:astronomy';\n\nTinytest.add('Modules - Storage - Reload', function(test) {\n  const Storage = Class.get('Storage');\n\n\tconst id = '6tMS79Kx6WhqTEwaC';\n  const storage = new Storage({\n\t\t_id: id,\n    one: {\n      string: 'abc',\n      immutable: 'immutable',\n    },\n    many: [{\n      string: 'abc',\n      immutable: 'immutable',\n    }],\n    numbers: [1, 2, 3],\n    string: 'abc',\n    number: 123,\n    boolean: true,\n    date: new Date(2000, 0, 1, 0, 0, 0, 0),\n    immutable: 'immutable',\n  });\n  storage.save();\n\n  // Modify document.\n  storage.one = {\n    string: 'cba',\n    immutable: 'IMMUTABLE',\n  };\n  storage.many = [{\n    string: 'cba',\n    immutable: 'IMMUTABLE',\n  }]\n  storage.numbers = [3, 2, 1];\n  storage.anything = {\n    string: 'cba',\n  };\n  storage.string = 'cba';\n  storage.number = 321;\n  storage.boolean = false;\n  storage.date = new Date(2001, 0, 1, 0, 0, 0, 0);\n  storage.immutable = 'IMMUTABLE';\n  storage.reload();\n\n  test.isTrue(EJSON.equals(storage, Storage.findOne(id)),\n    'Document should be reloaded to the original state'\n  );\n});\n"]},"hash":"92eb2914f6fa165f7a7b94f05984160c72ae0015"}
