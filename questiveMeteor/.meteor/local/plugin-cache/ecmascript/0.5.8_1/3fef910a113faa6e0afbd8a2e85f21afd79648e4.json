{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/jagi:astronomy","imported":["Class"],"specifiers":[{"kind":"named","imported":"Class","local":"Class"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/modules/storage/init.js","filenameRelative":"/packages/jagi:astronomy/test/modules/storage/init.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/modules/storage/init.js.map","sourceFileName":"/packages/jagi:astronomy/test/modules/storage/init.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"init"},"ignored":false,"code":"var Class;module.import('meteor/jagi:astronomy',{\"Class\":function(v){Class=v}});\n\nTinytest.add('Modules - Storage - Init', function (test) {\n  reset();\n\n  var NestedStorage = Class.create({\n    name: 'NestedStorage',\n    fields: {\n      string: {\n        type: String,\n        optional: true\n      },\n      transient: {\n        type: String,\n        transient: true\n      },\n      immutable: {\n        type: String,\n        immutable: true\n      }\n    }\n  });\n\n  var Storages = new Mongo.Collection(null);\n\n  var Storage = Class.create({\n    name: 'Storage',\n    collection: Storages,\n    fields: {\n      one: {\n        type: NestedStorage,\n        optional: true\n      },\n      many: {\n        type: [NestedStorage],\n        optional: true\n      },\n      numbers: {\n        type: [Number],\n        optional: true\n      },\n      string: {\n        type: String,\n        optional: true\n      },\n      number: {\n        type: Number,\n        optional: true\n      },\n      boolean: {\n        type: Boolean,\n        optional: true\n      },\n      date: {\n        type: Date,\n        optional: true\n      },\n      transient: {\n        type: String,\n        transient: true\n      },\n      immutable: {\n        type: String,\n        immutable: true\n      }\n    }\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/modules/storage/init.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,uBAAtB;;AAEA,SAAS,GAAT,CAAa,0BAAb,EAAyC,UAAS,IAAT,EAAe;AACtD;;AAEA,MAAM,gBAAgB,MAAM,MAAN,CAAa;AACjC,UAAM,eAD2B;AAEjC,YAAQ;AACN,cAAQ;AACN,cAAM,MADA;AAEN,kBAAU;AAFJ,OADF;AAKN,iBAAW;AACT,cAAM,MADG;AAET,mBAAW;AAFF,OALL;AASN,iBAAW;AACT,cAAM,MADG;AAET,mBAAW;AAFF;AATL;AAFyB,GAAb,CAAtB;;AAkBA,MAAM,WAAW,IAAI,MAAM,UAAV,CAAqB,IAArB,CAAjB;;AAEA,MAAM,UAAU,MAAM,MAAN,CAAa;AAC3B,UAAM,SADqB;AAE3B,gBAAY,QAFe;AAG3B,YAAQ;AACN,WAAK;AACH,cAAM,aADH;AAEH,kBAAU;AAFP,OADC;AAKN,YAAM;AACJ,cAAM,CAAC,aAAD,CADF;AAEJ,kBAAU;AAFN,OALA;AASN,eAAS;AACP,cAAM,CAAC,MAAD,CADC;AAEP,kBAAU;AAFH,OATH;AAaN,cAAQ;AACN,cAAM,MADA;AAEN,kBAAU;AAFJ,OAbF;AAiBN,cAAQ;AACN,cAAM,MADA;AAEN,kBAAU;AAFJ,OAjBF;AAqBN,eAAS;AACP,cAAM,OADC;AAEP,kBAAU;AAFH,OArBH;AAyBN,YAAM;AACJ,cAAM,IADF;AAEJ,kBAAU;AAFN,OAzBA;AA6BN,iBAAW;AACT,cAAM,MADG;AAET,mBAAW;AAFF,OA7BL;AAiCN,iBAAW;AACT,cAAM,MADG;AAET,mBAAW;AAFF;AAjCL;AAHmB,GAAb,CAAhB;AA0CD,CAjED","file":"/packages/jagi:astronomy/test/modules/storage/init.js.map","sourcesContent":["import { Class } from 'meteor/jagi:astronomy';\n\nTinytest.add('Modules - Storage - Init', function(test) {\n  reset();\n\n  const NestedStorage = Class.create({\n    name: 'NestedStorage',\n    fields: {\n      string: {\n        type: String,\n        optional: true\n      },\n      transient: {\n        type: String,\n        transient: true\n      },\n      immutable: {\n        type: String,\n        immutable: true\n      }\n    }\n  });\n\n  const Storages = new Mongo.Collection(null);\n\n  const Storage = Class.create({\n    name: 'Storage',\n    collection: Storages,\n    fields: {\n      one: {\n        type: NestedStorage,\n        optional: true\n      },\n      many: {\n        type: [NestedStorage],\n        optional: true\n      },\n      numbers: {\n        type: [Number],\n        optional: true\n      },\n      string: {\n        type: String,\n        optional: true\n      },\n      number: {\n        type: Number,\n        optional: true\n      },\n      boolean: {\n        type: Boolean,\n        optional: true\n      },\n      date: {\n        type: Date,\n        optional: true\n      },\n      transient: {\n        type: String,\n        transient: true\n      },\n      immutable: {\n        type: String,\n        immutable: true\n      }\n    }\n  });\n});"]},"hash":"3fef910a113faa6e0afbd8a2e85f21afd79648e4"}
