{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../behavior.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Behavior"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"apply_definition"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var Behavior;module.import('../behavior.js',{\"default\":function(v){Behavior=v}});\n\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n\tvar schema = Class.schema;\n\n\t// Add behaviors to the class.\n\t_.each(parsedDefinition.behaviors, function (behaviorsOptions, behaviorName) {\n\t\t// Get the behavior class.\n\t\tvar BehaviorClass = Behavior.get(behaviorName);\n\t\t_.each(behaviorsOptions, function (behaviorOptions) {\n\t\t\t// Create the behavior instance passing behavior options.\n\t\t\tvar behavior = new BehaviorClass(behaviorOptions);\n\t\t\t// Add behavior to the schema.\n\t\t\tschema.behaviors[behaviorName] = schema.behaviors[behaviorName] || [];\n\t\t\tschema.behaviors[behaviorName].push(behavior);\n\t\t\t// Apply behavior to the class.\n\t\t\tbehavior.apply(Class);\n\t\t});\n\t});\n};\n\nmodule.export(\"default\",exports.default=(onApplyDefinition));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,QAAP,MAAqB,gBAArB;;AAEA,SAAS,iBAAT,CAA2B,KAA3B,EAAkC,gBAAlC,EAAoD,SAApD,EAA+D;AAC9D,KAAI,SAAS,MAAM,MAAnB;;;AAGA,GAAE,IAAF,CAAO,iBAAiB,SAAxB,EAAmC,UAAS,gBAAT,EAA2B,YAA3B,EAAyC;;AAE3E,MAAI,gBAAgB,SAAS,GAAT,CAAa,YAAb,CAApB;AACA,IAAE,IAAF,CAAO,gBAAP,EAAyB,UAAS,eAAT,EAA0B;;AAElD,OAAI,WAAW,IAAI,aAAJ,CAAkB,eAAlB,CAAf;;AAEA,UAAO,SAAP,CAAiB,YAAjB,IAAiC,OAAO,SAAP,CAAiB,YAAjB,KAAkC,EAAnE;AACA,UAAO,SAAP,CAAiB,YAAjB,EAA+B,IAA/B,CAAoC,QAApC;;AAEA,YAAS,KAAT,CAAe,KAAf;AACA,GARD;AASA,EAZD;AAaA;;AAED,eAAe,iBAAf","file":"/packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js.map","sourcesContent":["import _ from 'lodash';\nimport Behavior from '../behavior.js';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n\tlet schema = Class.schema;\n\n\t// Add behaviors to the class.\n\t_.each(parsedDefinition.behaviors, function(behaviorsOptions, behaviorName) {\n\t\t// Get the behavior class.\n\t\tlet BehaviorClass = Behavior.get(behaviorName);\n\t\t_.each(behaviorsOptions, function(behaviorOptions) {\n\t\t\t// Create the behavior instance passing behavior options.\n\t\t\tlet behavior = new BehaviorClass(behaviorOptions);\n\t\t\t// Add behavior to the schema.\n\t\t\tschema.behaviors[behaviorName] = schema.behaviors[behaviorName] || [];\n\t\t\tschema.behaviors[behaviorName].push(behavior);\n\t\t\t// Apply behavior to the class.\n\t\t\tbehavior.apply(Class);\n\t\t});\n\t});\n};\n\nexport default onApplyDefinition;"]},"hash":"3b113fedf8b19627ae4788e024bba6382ed1e961"}
