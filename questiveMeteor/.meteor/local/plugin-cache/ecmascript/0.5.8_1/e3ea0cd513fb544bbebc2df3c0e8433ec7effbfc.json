{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-bootstrap","imported":["Button"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"}]},{"source":"react-bootstrap","imported":["Checkbox"],"specifiers":[{"kind":"named","imported":"Checkbox","local":"Checkbox"}]},{"source":"react-bootstrap","imported":["FieldGroup"],"specifiers":[{"kind":"named","imported":"FieldGroup","local":"FieldGroup"}]},{"source":"react-bootstrap","imported":["FormControl"],"specifiers":[{"kind":"named","imported":"FormControl","local":"FormControl"}]},{"source":"react-bootstrap","imported":["FormGroup"],"specifiers":[{"kind":"named","imported":"FormGroup","local":"FormGroup"}]},{"source":"react-bootstrap","imported":["Radio"],"specifiers":[{"kind":"named","imported":"Radio","local":"Radio"}]},{"source":"react-bootstrap","imported":["ControlLabel"],"specifiers":[{"kind":"named","imported":"ControlLabel","local":"ControlLabel"}]},{"source":"react-bootstrap","imported":["Well"],"specifiers":[{"kind":"named","imported":"Well","local":"Well"}]},{"source":"react-bootstrap","imported":["Panel"],"specifiers":[{"kind":"named","imported":"Panel","local":"Panel"}]},{"source":"react-bootstrap","imported":["ListGroup"],"specifiers":[{"kind":"named","imported":"ListGroup","local":"ListGroup"}]},{"source":"react-bootstrap","imported":["ListGroupItem"],"specifiers":[{"kind":"named","imported":"ListGroupItem","local":"ListGroupItem"}]},{"source":"react-bootstrap","imported":["Pager"],"specifiers":[{"kind":"named","imported":"Pager","local":"Pager"}]},{"source":"react-bootstrap","imported":["PageHeader"],"specifiers":[{"kind":"named","imported":"PageHeader","local":"PageHeader"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/create.js","filenameRelative":"/imports/ui/create.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/create.js.map","sourceFileName":"/imports/ui/create.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"create"},"ignored":false,"code":"var Button;module.import('react-bootstrap',{\"Button\":function(v){Button=v}});var Checkbox;module.import('react-bootstrap',{\"Checkbox\":function(v){Checkbox=v}});var FieldGroup;module.import('react-bootstrap',{\"FieldGroup\":function(v){FieldGroup=v}});var FormControl;module.import('react-bootstrap',{\"FormControl\":function(v){FormControl=v}});var FormGroup;module.import('react-bootstrap',{\"FormGroup\":function(v){FormGroup=v}});var Radio;module.import('react-bootstrap',{\"Radio\":function(v){Radio=v}});var ControlLabel;module.import('react-bootstrap',{\"ControlLabel\":function(v){ControlLabel=v}});var Well;module.import('react-bootstrap',{\"Well\":function(v){Well=v}});var Panel;module.import('react-bootstrap',{\"Panel\":function(v){Panel=v}});var ListGroup;module.import('react-bootstrap',{\"ListGroup\":function(v){ListGroup=v}});var ListGroupItem;module.import('react-bootstrap',{\"ListGroupItem\":function(v){ListGroupItem=v}});var Pager;module.import('react-bootstrap',{\"Pager\":function(v){Pager=v}});var PageHeader;module.import('react-bootstrap',{\"PageHeader\":function(v){PageHeader=v}});var React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\nvar ReactDOM = require('react-dom');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _counter = 0;\n\nvar Create = React.createClass({\n  displayName: 'Create',\n\n  render: function () {\n    function render() {\n      return React.createElement(\n        'div',\n        { className: 'main-container' },\n        React.createElement(\n          'center',\n          null,\n          React.createElement(\n            PageHeader,\n            null,\n            'Create a contest'\n          )\n        ),\n        React.createElement('div', null),\n        React.createElement(\n          'form',\n          null,\n          React.createElement(\n            ControlLabel,\n            null,\n            'Contest Name'\n          ),\n          React.createElement(FormControl, { type: 'text', placeholder: 'Give your contest a title' }),\n          React.createElement('br', null),\n          React.createElement(\n            FormGroup,\n            { controlId: 'formControlsTextarea' },\n            React.createElement(\n              ControlLabel,\n              null,\n              'Contest Description'\n            ),\n            React.createElement(FormControl, { componentClass: 'textarea', placeholder: 'Enter a description for your contest' })\n          ),\n          React.createElement('br', null),\n          React.createElement(\n            FormGroup,\n            null,\n            React.createElement(\n              ControlLabel,\n              null,\n              'Add the instructions for your contest below! Click to Expand.'\n            )\n          ),\n          React.createElement(\n            Panel,\n            { collapsible: true, defaultExpanded: false, header: 'Item 1' },\n            React.createElement(\n              ListGroup,\n              { fill: true },\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Action:  ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Location: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' }),\n                ' '\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Additional Info: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              )\n            )\n          ),\n          React.createElement(\n            Panel,\n            { collapsible: true, defaultExpanded: false, header: 'Item 2' },\n            React.createElement(\n              ListGroup,\n              { fill: true },\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Action:  ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Location: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' }),\n                ' '\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Additional Info: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              )\n            )\n          ),\n          React.createElement(\n            Panel,\n            { collapsible: true, defaultExpanded: false, header: 'Item 3' },\n            React.createElement(\n              ListGroup,\n              { fill: true },\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Action:  ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Location: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' }),\n                ' '\n              ),\n              React.createElement(\n                ListGroupItem,\n                null,\n                'Additional Info: ',\n                React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { id: 'placeholder' },\n            React.createElement(\n              'div',\n              { id: 'template' },\n              React.createElement(\n                Panel,\n                { collapsible: true, defaultExpanded: true, header: 'Additional Item' },\n                React.createElement(\n                  ListGroup,\n                  { fill: true },\n                  React.createElement(\n                    ListGroupItem,\n                    null,\n                    'Action:  ',\n                    React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n                  ),\n                  React.createElement(\n                    ListGroupItem,\n                    null,\n                    'Location: ',\n                    React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' }),\n                    ' '\n                  ),\n                  React.createElement(\n                    ListGroupItem,\n                    null,\n                    'Additional Info: ',\n                    React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n                  )\n                )\n              )\n            )\n          ),\n          React.createElement(\n            Pager,\n            null,\n            React.createElement(\n              Pager.Item,\n              { onClick: this.Add, previous: true, href: '#' },\n              'Add Additional Items →'\n            )\n          ),\n          React.createElement('br', null),\n          React.createElement(\n            'div',\n            { className: 'well' },\n            React.createElement(\n              Button,\n              { bsSize: 'large', block: true },\n              'Submit Contest'\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }(),\n\n  createField: function () {\n    function createField() {\n      $('#newField').append(React.createElement(\n        Panel,\n        { collapsible: true, defaultExpanded: false, header: 'Additional Item' },\n        React.createElement(\n          ListGroup,\n          { fill: true },\n          React.createElement(\n            ListGroupItem,\n            null,\n            'Action:  ',\n            React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n          ),\n          React.createElement(\n            ListGroupItem,\n            null,\n            'Location: ',\n            React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' }),\n            ' '\n          ),\n          React.createElement(\n            ListGroupItem,\n            null,\n            'Additional Info: ',\n            React.createElement(FormControl, { type: 'text', placeholder: 'Enter text' })\n          )\n        )\n      ));\n    }\n\n    return createField;\n  }(),\n\n  Add: function () {\n    function Add() {\n      _counter++;\n      var oClone = document.getElementById(\"template\").cloneNode(true);\n      oClone.id += _counter + \"\";\n      document.getElementById(\"placeholder\").appendChild(oClone);\n    }\n\n    return Add;\n  }()\n\n});\nmodule.exports = Create;","ast":null,"map":{"version":3,"sources":["/imports/ui/create.js"],"names":[],"mappings":"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","file":"/imports/ui/create.js.map","sourcesContent":["var React = require('react');\nvar Router = require('react-router');\nvar Query = require('./Search/Query');\nvar Results = require('./Search/Results');\nvar ReactDOM = require('react-dom');\nimport { Button } from 'react-bootstrap';\nimport { Checkbox } from 'react-bootstrap';\nimport { FieldGroup } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { FormGroup } from 'react-bootstrap';\nimport { Radio } from 'react-bootstrap';\nimport { ControlLabel } from 'react-bootstrap';\nimport { Well } from 'react-bootstrap';\nimport { Panel } from 'react-bootstrap';\nimport { ListGroup} from 'react-bootstrap';\nimport { ListGroupItem } from 'react-bootstrap';\nimport { Pager } from 'react-bootstrap';\nimport { PageHeader } from 'react-bootstrap';\n\nvar _counter = 0;\n\nvar Create = React.createClass({\n\trender: function(){\n\t\treturn(\n\t\t\t<div className=\"main-container\"> \n<center><PageHeader>Create a contest</PageHeader></center>\n<div></div>\n<form>\n      <ControlLabel>Contest Name</ControlLabel>\n\t\t\t<FormControl type=\"text\" placeholder=\"Give your contest a title\"></FormControl>\n<br />\n    <FormGroup controlId=\"formControlsTextarea\">\n      <ControlLabel>Contest Description</ControlLabel>\n      <FormControl componentClass=\"textarea\" placeholder=\"Enter a description for your contest\" />\n    </FormGroup>\n<br />\n    <FormGroup>\n      <ControlLabel>Add the instructions for your contest below! Click to Expand.</ControlLabel>\n    </FormGroup>\n\n   <Panel collapsible defaultExpanded={false} header=\"Item 1\">\n    <ListGroup fill>\n      <ListGroupItem>Action: \t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n      <ListGroupItem>Location:\t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl> </ListGroupItem>\n      <ListGroupItem>Additional Info: <FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n    </ListGroup>\n  </Panel>\n\n  \n   <Panel collapsible defaultExpanded={false} header=\"Item 2\">\n    <ListGroup fill>\n      <ListGroupItem>Action: \t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n      <ListGroupItem>Location:\t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl> </ListGroupItem>\n      <ListGroupItem>Additional Info: <FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n    </ListGroup>\n  </Panel>\n\n     <Panel collapsible defaultExpanded={false} header=\"Item 3\">\n    <ListGroup fill>\n      <ListGroupItem>Action: \t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n      <ListGroupItem>Location:\t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl> </ListGroupItem>\n      <ListGroupItem>Additional Info: <FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n    </ListGroup>\n  </Panel>\n\n\n\n<div id=\"placeholder\">\n\t<div id=\"template\">\n   <Panel collapsible defaultExpanded={true} header='Additional Item'>\n    \t<ListGroup fill>\n      <ListGroupItem>Action: \t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n      <ListGroupItem>Location:\t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl> </ListGroupItem>\n      <ListGroupItem>Additional Info: <FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n    \t</ListGroup>\n  \t</Panel>\n\t</div>\n</div>\n\n\n\n\n\n\n\n<Pager>\n    <Pager.Item onClick={this.Add} previous href=\"#\">Add Additional Items &rarr;</Pager.Item>\n  </Pager>\n\n  <br />\n\n\t\t\t<div className=\"well\">\n    \t\t<Button bsSize=\"large\" block>Submit Contest</Button>\n  \t\t\t</div>\n</form>\n\n\t\t\t</div>\n\t\t);\n},\n\n createField: function() {\n \t$('#newField').append(<Panel collapsible defaultExpanded={false} header=\"Additional Item\">\n    <ListGroup fill>\n      <ListGroupItem>Action: \t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n      <ListGroupItem>Location:\t<FormControl type=\"text\" placeholder=\"Enter text\"></FormControl> </ListGroupItem>\n      <ListGroupItem>Additional Info: <FormControl type=\"text\" placeholder=\"Enter text\"></FormControl></ListGroupItem>\n    </ListGroup>\n  </Panel>)\t\n }, \n\n\tAdd: function() {\n\t\t_counter++;\n    var oClone = document.getElementById(\"template\").cloneNode(true);\n    oClone.id += (_counter + \"\");\n    document.getElementById(\"placeholder\").appendChild(oClone);\n}\n\n});\nmodule.exports = Create;"]},"hash":"e3ea0cd513fb544bbebc2df3c0e8433ec7effbfc"}
