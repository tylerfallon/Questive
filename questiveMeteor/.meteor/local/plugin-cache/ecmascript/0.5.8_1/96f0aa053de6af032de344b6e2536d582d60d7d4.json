{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]}],"exports":{"exported":["Task"],"specifiers":[{"kind":"local","local":"Task","exported":"default"}]}}},"options":{"filename":"/imports/ui/Children/Task.jsx","filenameRelative":"/imports/ui/Children/Task.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Children/Task.jsx.map","sourceFileName":"/imports/ui/Children/Task.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Task"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var classnames;module.import('classnames',{\"default\":function(v){classnames=v}});\n\n\n\n\n\n\n// Task component - represents a single todo item\n\nvar Task = function (_Component) {\n  _inherits(Task, _Component);\n\n  function Task() {\n    _classCallCheck(this, Task);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Task.prototype.toggleChecked = function () {\n    function toggleChecked() {\n      // Set the checked property to the opposite of its current value\n      Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n    }\n\n    return toggleChecked;\n  }();\n  // removes tasks when called\n\n\n  Task.prototype.deleteThisTask = function () {\n    function deleteThisTask() {\n      Meteor.call('tasks.remove', this.props.task._id);\n    }\n\n    return deleteThisTask;\n  }();\n  // wil display private.pubic button\n\n\n  Task.prototype.togglePrivate = function () {\n    function togglePrivate() {\n      Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task['private']);\n    }\n\n    return togglePrivate;\n  }();\n\n  Task.prototype.render = function () {\n    function render() {\n      // Give tasks a different className when they are checked off,\n      // so that we can style them nicely in CSS\n      var taskClassName = classnames({\n        checked: this.props.task.checked,\n        'private': this.props.task['private']\n      });\n      return React.createElement(\n        'li',\n        { className: taskClassName },\n        React.createElement(\n          'button',\n          { className: 'delete', onClick: this.deleteThisTask.bind(this) },\n          'Ã—'\n        ),\n        React.createElement('input', {\n          type: 'checkbox',\n          readOnly: true,\n          checked: this.props.task.checked,\n          onClick: this.toggleChecked.bind(this)\n        }),\n        this.props.showPrivateButton ? React.createElement(\n          'button',\n          { className: 'toggle-private', onClick: this.togglePrivate.bind(this) },\n          this.props.task['private'] ? 'Private' : 'Public'\n        ) : '',\n        React.createElement(\n          'span',\n          { className: 'text' },\n          React.createElement(\n            'strong',\n            null,\n            React.createElement(\n              'h3',\n              null,\n              this.props.task.task\n            )\n          ),\n          ' : ',\n          this.props.task.location\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Task;\n}(Component);\n\nmodule.export(\"default\",exports.default=(Task));\n\n\nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: PropTypes.object.isRequired,\n  showPrivateButton: React.PropTypes.bool.isRequired\n};","ast":null,"map":{"version":3,"sources":["/imports/ui/Children/Task.jsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,OAAO,UAAP,MAAuB,YAAvB;;;;IAIqB,I;;;;;;;;;iBACnB,a;6BAAgB;;AAEd,aAAO,IAAP,CAAY,kBAAZ,EAAgC,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhD,EAAqD,CAAC,KAAK,KAAL,CAAW,IAAX,CAAgB,OAAtE;AACD;;;;;;;iBAED,c;8BAAiB;AACf,aAAO,IAAP,CAAY,cAAZ,EAA4B,KAAK,KAAL,CAAW,IAAX,CAAgB,GAA5C;AACD;;;;;;;iBAED,a;6BAAgB;AACd,aAAO,IAAP,CAAY,kBAAZ,EAAgC,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhD,EAAqD,CAAE,KAAK,KAAL,CAAW,IAAX,WAAvD;AACD;;;;;iBAED,M;sBAAS;;;AAGT,UAAM,gBAAgB,WAAW;AAC7B,iBAAS,KAAK,KAAL,CAAW,IAAX,CAAgB,OADI;AAE7B,mBAAS,KAAK,KAAL,CAAW,IAAX;AAFoB,OAAX,CAAtB;AAIE,aACE;AAAA;AAAA,UAAI,WAAW,aAAf;AACE;AAAA;AAAA,YAAQ,WAAU,QAAlB,EAA2B,SAAS,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CAApC;AAAA;AAAA,SADF;AAKE;AACE,gBAAK,UADP;AAEE,wBAFF;AAGE,mBAAS,KAAK,KAAL,CAAW,IAAX,CAAgB,OAH3B;AAIE,mBAAS,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AAJX,UALF;AAYI,aAAK,KAAL,CAAW,iBAAX,GACA;AAAA;AAAA,YAAQ,WAAU,gBAAlB,EAAmC,SAAS,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAA5C;AACI,eAAK,KAAL,CAAW,IAAX,cAA0B,SAA1B,GAAsC;AAD1C,SADA,GAIE,EAhBN;AAkBE;AAAA;AAAA,YAAM,WAAU,MAAhB;AACE;AAAA;AAAA;AAAQ;AAAA;AAAA;AAAK,mBAAK,KAAL,CAAW,IAAX,CAAgB;AAArB;AAAR,WADF;AAAA;AACsD,eAAK,KAAL,CAAW,IAAX,CAAgB;AADtE;AAlBF,OADF;AAwBD;;;;;;EA7C+B,S;;eAAb,I;;;AAgDrB,KAAK,SAAL,GAAiB;;;AAGf,QAAM,UAAU,MAAV,CAAiB,UAHR;AAIf,qBAAmB,MAAM,SAAN,CAAgB,IAAhB,CAAqB;AAJzB,CAAjB","file":"/imports/ui/Children/Task.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n  // removes tasks when called \n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n  // wil display private.pubic button\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n  const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong><h3>{this.props.task.task}</h3></strong> : {this.props.task.location}\n        </span>\n      </li>\n    );\n  }\n}\n\nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: PropTypes.object.isRequired,\n  showPrivateButton: React.PropTypes.bool.isRequired,\n};"]},"hash":"96f0aa053de6af032de344b6e2536d582d60d7d4"}
