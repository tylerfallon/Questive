{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"./set_one.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"setOne"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"set_all"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var setOne;module.import('./set_one.js',{\"default\":function(v){setOne=v}});\n\n\nfunction setAll(doc, fieldsValues) {\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  _.defaults(options, {\n    clone: true\n  });\n  var Class = doc.constructor;\n\n  // Get names of the fields that are not present in the fieldsValues variable.\n  var fieldsNames = _.difference(Class.getFieldsNames(), _.keys(fieldsValues));\n\n  _.each(fieldsNames, function (fieldName) {\n    setOne(doc, fieldName, undefined, options);\n  });\n\n  _.forOwn(fieldsValues, function (fieldValue, fieldName) {\n    setOne(doc, fieldName, fieldValue, options);\n  });\n};\n\nmodule.export(\"default\",exports.default=(setAll));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,MAAP,MAAmB,cAAnB;;AAEA,SAAS,MAAT,CAAgB,GAAhB,EAAqB,YAArB,EAAiD;AAAA,MAAd,OAAc,yDAAJ,EAAI;;AAC/C,IAAE,QAAF,CAAW,OAAX,EAAoB;AAClB,WAAO;AADW,GAApB;AAGA,MAAM,QAAQ,IAAI,WAAlB;;;AAGA,MAAM,cAAc,EAAE,UAAF,CAAa,MAAM,cAAN,EAAb,EAAqC,EAAE,IAAF,CAAO,YAAP,CAArC,CAApB;;AAEA,IAAE,IAAF,CAAO,WAAP,EAAoB,UAAC,SAAD,EAAe;AACjC,WAAO,GAAP,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,OAAlC;AACD,GAFD;;AAIA,IAAE,MAAF,CAAS,YAAT,EAAuB,UAAC,UAAD,EAAa,SAAb,EAA2B;AAChD,WAAO,GAAP,EAAY,SAAZ,EAAuB,UAAvB,EAAmC,OAAnC;AACD,GAFD;AAGD;;AAED,eAAe,MAAf","file":"/packages/jagi:astronomy/lib/modules/fields/utils/set_all.js.map","sourcesContent":["import _ from 'lodash';\nimport setOne from './set_one.js';\n\nfunction setAll(doc, fieldsValues, options = {}) {\n  _.defaults(options, {\n    clone: true\n  });\n  const Class = doc.constructor;\n\n  // Get names of the fields that are not present in the fieldsValues variable.\n  const fieldsNames = _.difference(Class.getFieldsNames(), _.keys(fieldsValues));\n\n  _.each(fieldsNames, (fieldName) => {\n    setOne(doc, fieldName, undefined, options);\n  });\n\n  _.forOwn(fieldsValues, (fieldValue, fieldName) => {\n    setOne(doc, fieldName, fieldValue, options);\n  });\n};\n\nexport default setAll;"]},"hash":"fc8f19d14bc9bc184eb29ea5ce2ce5ef21c43db8"}
