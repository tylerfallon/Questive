{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"apply_definition"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n\tvar Collection = Class.getCollection();\n\n\tif (!Meteor.isServer || !Collection || Collection && !Collection._connection) {\n\t\treturn;\n\t}\n\n\tvar schema = Class.schema;\n\n\tfunction prefixIndexes(indexes, fieldName) {\n\t\t// Prefix the fields property.\n\t\t_.each(indexes, function (index, indexName) {\n\t\t\tindex.fields = _.mapKeys(index.fields, function (value, key) {\n\t\t\t\treturn fieldName + '.' + key;\n\t\t\t});\n\t\t\t_.extend(index.options, {\n\t\t\t\tname: fieldName + '.' + indexName\n\t\t\t});\n\t\t});\n\t\t// Prefix object keys.\n\t\tindexes = _.mapKeys(indexes, function (index, indexName) {\n\t\t\treturn fieldName + '.' + indexName;\n\t\t});\n\t\treturn indexes;\n\t}\n\n\t// Add indexes to the collection from nested classes.\n\tfunction collectNestedIndexes(Class) {\n\t\tvar indexes = {};\n\t\tvar fields = _.concat(Class.getObjectFields(), Class.getListFields(true));\n\t\t_.each(fields, function (field) {\n\t\t\t_.extend(indexes, prefixIndexes(field.type['class'].definition.indexes, field.name), prefixIndexes(collectNestedIndexes(field.type['class']), field.name));\n\t\t});\n\t\treturn indexes;\n\t}\n\n\tvar indexes = _.extend({}, parsedDefinition.indexes, collectNestedIndexes(Class));\n\n\t_.each(indexes, function (index, indexName) {\n\t\tschema.indexes[indexName] = index;\n\t\tCollection._ensureIndex(index.fields, index.options);\n\t});\n};\n\nmodule.export(\"default\",exports.default=(onApplyDefinition));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;;AAEA,SAAS,iBAAT,CAA2B,KAA3B,EAAkC,gBAAlC,EAAoD,SAApD,EAA+D;AAC9D,KAAM,aAAa,MAAM,aAAN,EAAnB;;AAEA,KACC,CAAC,OAAO,QAAR,IACE,CAAC,UADH,IAEC,cAAc,CAAC,WAAW,WAH5B,EAIE;AACD;AACA;;AAED,KAAM,SAAS,MAAM,MAArB;;AAEA,UAAS,aAAT,CAAuB,OAAvB,EAAgC,SAAhC,EAA2C;;AAE1C,IAAE,IAAF,CAAO,OAAP,EAAgB,UAAC,KAAD,EAAQ,SAAR,EAAsB;AACrC,SAAM,MAAN,GAAe,EAAE,OAAF,CAAU,MAAM,MAAhB,EAAwB,UAAC,KAAD,EAAQ,GAAR,EAAgB;AACtD,WAAU,SAAV,SAAuB,GAAvB;AACA,IAFc,CAAf;AAGA,KAAE,MAAF,CAAS,MAAM,OAAf,EAAwB;AACvB,UAAS,SAAT,SAAsB;AADC,IAAxB;AAGA,GAPD;;AASA,YAAU,EAAE,OAAF,CAAU,OAAV,EAAmB,UAAC,KAAD,EAAQ,SAAR,EAAsB;AAClD,UAAU,SAAV,SAAuB,SAAvB;AACA,GAFS,CAAV;AAGA,SAAO,OAAP;AACA;;;AAGD,UAAS,oBAAT,CAA8B,KAA9B,EAAqC;AACpC,MAAM,UAAU,EAAhB;AACA,MAAM,SAAS,EAAE,MAAF,CACd,MAAM,eAAN,EADc,EACW,MAAM,aAAN,CAAoB,IAApB,CADX,CAAf;AAGA,IAAE,IAAF,CAAO,MAAP,EAAe,UAAC,KAAD,EAAW;AACzB,KAAE,MAAF,CACC,OADD,EAEC,cAAc,MAAM,IAAN,UAAiB,UAAjB,CAA4B,OAA1C,EAAmD,MAAM,IAAzD,CAFD,EAGC,cAAc,qBAAqB,MAAM,IAAN,SAArB,CAAd,EAAsD,MAAM,IAA5D,CAHD;AAKA,GAND;AAOA,SAAO,OAAP;AACA;;AAEA,KAAM,UAAU,EAAE,MAAF,CACd,EADc,EAEd,iBAAiB,OAFH,EAGd,qBAAqB,KAArB,CAHc,CAAhB;;AAMD,GAAE,IAAF,CAAO,OAAP,EAAgB,UAAC,KAAD,EAAQ,SAAR,EAAsB;AACrC,SAAO,OAAP,CAAe,SAAf,IAA4B,KAA5B;AACA,aAAW,YAAX,CAAwB,MAAM,MAA9B,EAAsC,MAAM,OAA5C;AACA,EAHD;AAIA;;AAED,eAAe,iBAAf","file":"/packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js.map","sourcesContent":["import _ from 'lodash';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n\tconst Collection = Class.getCollection();\n\n\tif (\n\t\t!Meteor.isServer ||\n    !Collection ||\n\t\t(Collection && !Collection._connection)\n\t) {\n\t\treturn;\n\t}\n\n\tconst schema = Class.schema;\n\n\tfunction prefixIndexes(indexes, fieldName) {\n\t\t// Prefix the fields property.\n\t\t_.each(indexes, (index, indexName) => {\n\t\t\tindex.fields = _.mapKeys(index.fields, (value, key) => {\n\t\t\t\treturn `${fieldName}.${key}`;\n\t\t\t});\n\t\t\t_.extend(index.options, {\n\t\t\t\tname: `${fieldName}.${indexName}`\n\t\t\t});\n\t\t});\n\t\t// Prefix object keys.\n\t\tindexes = _.mapKeys(indexes, (index, indexName) => {\n\t\t\treturn `${fieldName}.${indexName}`;\n\t\t});\n\t\treturn indexes;\n\t}\n\n\t// Add indexes to the collection from nested classes.\n\tfunction collectNestedIndexes(Class) {\n\t\tconst indexes = {};\n\t\tconst fields = _.concat(\n\t\t\tClass.getObjectFields(), Class.getListFields(true)\n\t\t);\n\t\t_.each(fields, (field) => {\n\t\t\t_.extend(\n\t\t\t\tindexes,\n\t\t\t\tprefixIndexes(field.type.class.definition.indexes, field.name),\n\t\t\t\tprefixIndexes(collectNestedIndexes(field.type.class), field.name)\n\t\t\t);\n\t\t});\n\t\treturn indexes;\n\t}\n\n  const indexes = _.extend(\n    {},\n    parsedDefinition.indexes,\n    collectNestedIndexes(Class)\n  );\n\n\t_.each(indexes, (index, indexName) => {\n\t\tschema.indexes[indexName] = index;\n\t\tCollection._ensureIndex(index.fields, index.options);\n\t});\n};\n\nexport default onApplyDefinition;"]},"hash":"2d1c5a3374bd3dd878a74efda9eff8071285e03c"}
