{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["AccountsTest"],"specifiers":[{"kind":"named","imported":"AccountsTest","local":"AccountsTest"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/accounts-base/accounts_url_tests.js","filenameRelative":"/packages/accounts-base/accounts_url_tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/accounts-base/accounts_url_tests.js.map","sourceFileName":"/packages/accounts-base/accounts_url_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"accounts_url_tests"},"ignored":false,"code":"var AccountsTest;module.import(\"meteor/accounts-base\",{\"AccountsTest\":function(v){AccountsTest=v}});\n\nTinytest.add(\"accounts - parse urls for accounts-password\", function (test) {\n  var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"];\n\n  // make sure the callback was called the right number of times\n  var actionsParsed = [];\n\n  _.each(actions, function (hashPart) {\n    var fakeToken = \"asdf\";\n\n    var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n    AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n      test.equal(token, fakeToken);\n      test.equal(action, hashPart);\n\n      // XXX COMPAT WITH 0.9.3\n      if (hashPart === \"reset-password\") {\n        test.equal(Accounts._resetPasswordToken, fakeToken);\n      } else if (hashPart === \"verify-email\") {\n        test.equal(Accounts._verifyEmailToken, fakeToken);\n      } else if (hashPart === \"enroll-account\") {\n        test.equal(Accounts._enrollAccountToken, fakeToken);\n      }\n\n      // Reset variables for the next test\n      Accounts._resetPasswordToken = null;\n      Accounts._verifyEmailToken = null;\n      Accounts._enrollAccountToken = null;\n\n      actionsParsed.push(action);\n    });\n  });\n\n  // make sure each action is called once, in order\n  test.equal(actionsParsed, actions);\n});","ast":null,"map":{"version":3,"sources":["/packages/accounts-base/accounts_url_tests.js"],"names":[],"mappings":"AAAA,SAAQ,YAAR,QAA2B,sBAA3B;;AAEA,SAAS,GAAT,CAAa,6CAAb,EACE,UAAU,IAAV,EAAgB;AACd,MAAI,UAAU,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,gBAAnC,CAAd;;;AAGA,MAAI,gBAAgB,EAApB;;AAEA,IAAE,IAAF,CAAO,OAAP,EAAgB,UAAU,QAAV,EAAoB;AAClC,QAAI,YAAY,MAAhB;;AAEA,QAAI,gBAAgB,OAAO,QAAP,GAAkB,GAAlB,GAAwB,SAA5C;AACA,iBAAa,kBAAb,CAAgC,aAAhC,EAA+C,UAAU,KAAV,EAAiB,MAAjB,EAAyB;AACtE,WAAK,KAAL,CAAW,KAAX,EAAkB,SAAlB;AACA,WAAK,KAAL,CAAW,MAAX,EAAmB,QAAnB;;;AAGA,UAAI,aAAa,gBAAjB,EAAmC;AACjC,aAAK,KAAL,CAAW,SAAS,mBAApB,EAAyC,SAAzC;AACD,OAFD,MAEO,IAAI,aAAa,cAAjB,EAAiC;AACtC,aAAK,KAAL,CAAW,SAAS,iBAApB,EAAuC,SAAvC;AACD,OAFM,MAEA,IAAI,aAAa,gBAAjB,EAAmC;AACxC,aAAK,KAAL,CAAW,SAAS,mBAApB,EAAyC,SAAzC;AACD;;;AAGD,eAAS,mBAAT,GAA+B,IAA/B;AACA,eAAS,iBAAT,GAA6B,IAA7B;AACA,eAAS,mBAAT,GAA+B,IAA/B;;AAEA,oBAAc,IAAd,CAAmB,MAAnB;AACD,KAnBD;AAoBD,GAxBD;;;AA2BA,OAAK,KAAL,CAAW,aAAX,EAA0B,OAA1B;AACD,CAnCH","file":"/packages/accounts-base/accounts_url_tests.js.map","sourcesContent":["import {AccountsTest} from \"meteor/accounts-base\";\n\nTinytest.add(\"accounts - parse urls for accounts-password\",\n  function (test) {\n    var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"];\n\n    // make sure the callback was called the right number of times\n    var actionsParsed = [];\n\n    _.each(actions, function (hashPart) {\n      var fakeToken = \"asdf\";\n      \n      var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n      AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n        test.equal(token, fakeToken);\n        test.equal(action, hashPart);\n\n        // XXX COMPAT WITH 0.9.3\n        if (hashPart === \"reset-password\") {\n          test.equal(Accounts._resetPasswordToken, fakeToken);\n        } else if (hashPart === \"verify-email\") {\n          test.equal(Accounts._verifyEmailToken, fakeToken);\n        } else if (hashPart === \"enroll-account\") {\n          test.equal(Accounts._enrollAccountToken, fakeToken);\n        }\n\n        // Reset variables for the next test\n        Accounts._resetPasswordToken = null;\n        Accounts._verifyEmailToken = null;\n        Accounts._enrollAccountToken = null;\n\n        actionsParsed.push(action);\n      });\n    });\n\n    // make sure each action is called once, in order\n    test.equal(actionsParsed, actions);\n  });\n"]},"hash":"778e445c53c06551983c175fdedc95c65d3aaaa1"}
