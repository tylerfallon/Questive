{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/jagi:astronomy","imported":["Class"],"specifiers":[{"kind":"named","imported":"Class","local":"Class"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/modules/storage/class_insert.js","filenameRelative":"/packages/jagi:astronomy/test/modules/storage/class_insert.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/modules/storage/class_insert.js.map","sourceFileName":"/packages/jagi:astronomy/test/modules/storage/class_insert.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"class_insert"},"ignored":false,"code":"var Class;module.import('meteor/jagi:astronomy',{\"Class\":function(v){Class=v}});\n\nTinytest.add('Modules - Storage - Class insert', function (test) {\n  var Storage = Class.get('Storage');\n\n  var id = '6tMS79Kx6WhqTEwaC';\n  Storage.insert({\n    '_id': id,\n    'one': {\n      'string': 'abc',\n      'transient': 'transient',\n      'immutable': 'immutable'\n    },\n    'many': [{\n      'string': 'abc',\n      'transient': 'transient',\n      'immutable': 'immutable'\n    }],\n    'numbers': [1, 2, 3],\n    'string': 'abc',\n    'number': 123,\n    'boolean': true,\n    'date': new Date(2000, 0, 1),\n    'transient': 'transient',\n    'immutable': 'immutable'\n  });\n\n  var expected = {\n    '_id': id,\n    'one': {\n      'string': 'abc',\n      'immutable': 'immutable'\n    },\n    'many': [{\n      'string': 'abc',\n      'immutable': 'immutable'\n    }],\n    'numbers': [1, 2, 3],\n    'string': 'abc',\n    'number': 123,\n    'boolean': true,\n    'date': new Date(2000, 0, 1),\n    'immutable': 'immutable'\n  };\n  test.equal(Storage.findOne(id, {\n    transform: null\n  }), expected, 'Document has not been inserted properly');\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/modules/storage/class_insert.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,uBAAtB;;AAEA,SAAS,GAAT,CAAa,kCAAb,EAAiD,UAAS,IAAT,EAAe;AAC9D,MAAM,UAAU,MAAM,GAAN,CAAU,SAAV,CAAhB;;AAEA,MAAM,KAAK,mBAAX;AACA,UAAQ,MAAR,CAAe;AACb,WAAO,EADM;AAEb,WAAO;AACL,gBAAU,KADL;AAEL,mBAAa,WAFR;AAGL,mBAAa;AAHR,KAFM;AAOb,YAAQ,CAAC;AACP,gBAAU,KADH;AAEP,mBAAa,WAFN;AAGP,mBAAa;AAHN,KAAD,CAPK;AAYb,eAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAZE;AAab,cAAU,KAbG;AAcb,cAAU,GAdG;AAeb,eAAW,IAfE;AAgBb,YAAQ,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAhBK;AAiBb,iBAAa,WAjBA;AAkBb,iBAAa;AAlBA,GAAf;;AAqBA,MAAM,WAAW;AACf,WAAO,EADQ;AAEf,WAAO;AACL,gBAAU,KADL;AAEL,mBAAa;AAFR,KAFQ;AAMf,YAAQ,CAAC;AACP,gBAAU,KADH;AAEP,mBAAa;AAFN,KAAD,CANO;AAUf,eAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAVI;AAWf,cAAU,KAXK;AAYf,cAAU,GAZK;AAaf,eAAW,IAbI;AAcf,YAAQ,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAdO;AAef,iBAAa;AAfE,GAAjB;AAiBA,OAAK,KAAL,CAAW,QAAQ,OAAR,CAAgB,EAAhB,EAAoB;AAC7B,eAAW;AADkB,GAApB,CAAX,EAEI,QAFJ,EAGE,yCAHF;AAKD,CA/CD","file":"/packages/jagi:astronomy/test/modules/storage/class_insert.js.map","sourcesContent":["import { Class } from 'meteor/jagi:astronomy';\n\nTinytest.add('Modules - Storage - Class insert', function(test) {\n  const Storage = Class.get('Storage');\n\n  const id = '6tMS79Kx6WhqTEwaC';\n  Storage.insert({\n    '_id': id,\n    'one': {\n      'string': 'abc',\n      'transient': 'transient',\n      'immutable': 'immutable',\n    },\n    'many': [{\n      'string': 'abc',\n      'transient': 'transient',\n      'immutable': 'immutable',\n    }],\n    'numbers': [1, 2, 3],\n    'string': 'abc',\n    'number': 123,\n    'boolean': true,\n    'date': new Date(2000, 0, 1),\n    'transient': 'transient',\n    'immutable': 'immutable',\n  });\n\n  const expected = {\n    '_id': id,\n    'one': {\n      'string': 'abc',\n      'immutable': 'immutable',\n    },\n    'many': [{\n      'string': 'abc',\n      'immutable': 'immutable',\n    }],\n    'numbers': [1, 2, 3],\n    'string': 'abc',\n    'number': 123,\n    'boolean': true,\n    'date': new Date(2000, 0, 1),\n    'immutable': 'immutable',\n  };\n  test.equal(Storage.findOne(id, {\n    transform: null,\n  }), expected,\n    'Document has not been inserted properly'\n  );\n});\n"]},"hash":"c36ab09ebc9185ac7352f736d39e45a7d0f9ce60"}
