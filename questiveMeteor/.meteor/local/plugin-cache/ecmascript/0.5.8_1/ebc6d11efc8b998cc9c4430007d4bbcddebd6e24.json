{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"./is_nested_field_name.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"isNestedFieldName"}]},{"source":"../../../core/class.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AstroClass"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"traverse"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var isNestedFieldName;module.import('./is_nested_field_name.js',{\"default\":function(v){isNestedFieldName=v}});var AstroClass;module.import('../../../core/class.js',{\"default\":function(v){AstroClass=v}});\n\n\n\nfunction traverse(doc, name, callback) {\n  if (!doc) {\n    return;\n  }\n\n  var Class = void 0;\n  var field = void 0;\n\n  // Check whether the given field name is a nested field name.\n  if (!isNestedFieldName(name)) {\n    // Get a class.\n    var _Class = doc.constructor;\n    // Get a field definition.\n    var _field = _Class.getField(name);\n    // Execute the callback function passing the last nested document, the last\n    // segment name and a field object.\n    return callback(doc, name, _field);\n  }\n\n  // Split the nested field pattern name by the \".\" character.\n  var segments = name.split('.');\n  // Get the last and one before the last index.\n  var lastIndex = segments.length - 1;\n\n  // Traverse nested fields until reaching the last one from the pattern.\n  var next = function next(nestedDoc, segmentIndex) {\n    segmentIndex = segmentIndex || 0;\n    // Get a nested field name under the given index.\n    var segment = segments[segmentIndex];\n    // Check if a nested document is an instance of the Astronomy class and get\n    // a field object for a given field name;\n    if (nestedDoc instanceof AstroClass) {\n      // Get a class for of a nested document.\n      Class = nestedDoc.constructor;\n      // Get a field object from the nested class.\n      field = Class.getField(segment);\n    }\n    if (segmentIndex === lastIndex) {\n      // Execute the callback function, if we reached the last nested document.\n      return callback(nestedDoc, segment, field);\n    } else if (_.isObject(nestedDoc[segment])) {\n      // Go deeper if a value of the current nested document is an object.\n      return next(nestedDoc[segment], segmentIndex + 1);\n    }\n  };\n\n  // Start traversing nested fields.\n  return next(doc);\n};\n\nmodule.export(\"default\",exports.default=(traverse));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,iBAAP,MAA8B,2BAA9B;AACA,OAAO,UAAP,MAAuB,wBAAvB;;AAEA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,QAA7B,EAAuC;AACrC,MAAI,CAAC,GAAL,EAAU;AACR;AACD;;AAED,MAAI,cAAJ;AACA,MAAI,cAAJ;;;AAGA,MAAI,CAAC,kBAAkB,IAAlB,CAAL,EAA8B;;AAE5B,QAAI,SAAQ,IAAI,WAAhB;;AAEA,QAAI,SAAQ,OAAM,QAAN,CAAe,IAAf,CAAZ;;;AAGA,WAAO,SAAS,GAAT,EAAc,IAAd,EAAoB,MAApB,CAAP;AACD;;;AAGD,MAAI,WAAW,KAAK,KAAL,CAAW,GAAX,CAAf;;AAEA,MAAI,YAAY,SAAS,MAAT,GAAkB,CAAlC;;;AAGA,MAAI,OAAO,SAAP,IAAO,CAAS,SAAT,EAAoB,YAApB,EAAkC;AAC3C,mBAAe,gBAAgB,CAA/B;;AAEA,QAAI,UAAU,SAAS,YAAT,CAAd;;;AAGA,QAAI,qBAAqB,UAAzB,EAAqC;;AAEnC,cAAQ,UAAU,WAAlB;;AAEA,cAAQ,MAAM,QAAN,CAAe,OAAf,CAAR;AACD;AACD,QAAI,iBAAiB,SAArB,EAAgC;;AAE9B,aAAO,SAAS,SAAT,EAAoB,OAApB,EAA6B,KAA7B,CAAP;AACD,KAHD,MAIK,IAAI,EAAE,QAAF,CAAW,UAAU,OAAV,CAAX,CAAJ,EAAoC;;AAEvC,aAAO,KAAK,UAAU,OAAV,CAAL,EAAyB,eAAe,CAAxC,CAAP;AACD;AACF,GApBD;;;AAuBA,SAAO,KAAK,GAAL,CAAP;AACD;;AAED,eAAe,QAAf","file":"/packages/jagi:astronomy/lib/modules/fields/utils/traverse.js.map","sourcesContent":["import _ from 'lodash';\nimport isNestedFieldName from './is_nested_field_name.js';\nimport AstroClass from '../../../core/class.js';\n\nfunction traverse(doc, name, callback) {\n  if (!doc) {\n    return;\n  }\n\n  let Class;\n  let field;\n\n  // Check whether the given field name is a nested field name.\n  if (!isNestedFieldName(name)) {\n    // Get a class.\n    let Class = doc.constructor;\n    // Get a field definition.\n    let field = Class.getField(name);\n    // Execute the callback function passing the last nested document, the last\n    // segment name and a field object.\n    return callback(doc, name, field);\n  }\n\n  // Split the nested field pattern name by the \".\" character.\n  let segments = name.split('.');\n  // Get the last and one before the last index.\n  let lastIndex = segments.length - 1;\n\n  // Traverse nested fields until reaching the last one from the pattern.\n  let next = function(nestedDoc, segmentIndex) {\n    segmentIndex = segmentIndex || 0;\n    // Get a nested field name under the given index.\n    let segment = segments[segmentIndex];\n    // Check if a nested document is an instance of the Astronomy class and get\n    // a field object for a given field name;\n    if (nestedDoc instanceof AstroClass) {\n      // Get a class for of a nested document.\n      Class = nestedDoc.constructor;\n      // Get a field object from the nested class.\n      field = Class.getField(segment);\n    }\n    if (segmentIndex === lastIndex) {\n      // Execute the callback function, if we reached the last nested document.\n      return callback(nestedDoc, segment, field);\n    }\n    else if (_.isObject(nestedDoc[segment])) {\n      // Go deeper if a value of the current nested document is an object.\n      return next(nestedDoc[segment], segmentIndex + 1);\n    }\n  };\n\n  // Start traversing nested fields.\n  return next(doc);\n};\n\nexport default traverse;"]},"hash":"ebc6d11efc8b998cc9c4430007d4bbcddebd6e24"}
