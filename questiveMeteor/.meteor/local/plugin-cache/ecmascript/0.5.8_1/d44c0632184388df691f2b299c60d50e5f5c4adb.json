{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"meteor/jagi:astronomy","imported":["Class"],"specifiers":[{"kind":"named","imported":"Class","local":"Class"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/test/modules/storage/copy.js","filenameRelative":"/packages/jagi:astronomy/test/modules/storage/copy.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/test/modules/storage/copy.js.map","sourceFileName":"/packages/jagi:astronomy/test/modules/storage/copy.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"copy"},"ignored":false,"code":"var _;module.import('lodash',{\"default\":function(v){_=v}});var Class;module.import('meteor/jagi:astronomy',{\"Class\":function(v){Class=v}});\n\n\nTinytest.add('Modules - Storage - Copy', function (test) {\n  resetDatabase();\n\n  var Storage = Class.get('Storage');\n\n  var id = '6tMS79Kx6WhqTEwaC';\n  var storage = new Storage({\n    _id: id,\n    one: {\n      string: 'abc',\n      immutable: 'immutable'\n    },\n    many: [{\n      string: 'abc',\n      immutable: 'immutable'\n    }],\n    numbers: [1, 2, 3],\n    string: 'abc',\n    number: 123,\n    boolean: true,\n    date: new Date(2000, 0, 1, 0, 0, 0, 0),\n    immutable: 'immutable'\n  });\n  storage.save();\n\n  var clone = storage.copy();\n  test.isNull(clone._id, 'In the cloned document a value of the \"_id\" field should be null');\n  clone = storage.copy(true);\n  test.isNotNull(clone._id, 'In the saved cloned document a value of the \"_id\" field should not be null');\n  test.notEqual(clone._id, storage._id, 'The \"_id\" fields of the original and cloned documents should not be equal');\n  test.equal(_.omit(clone.raw(), '_id'), _.omit(storage.raw(), '_id'), 'All values (except the \"_id\" field) of the original and cloned ' + 'documents should be equal');\n});","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/test/modules/storage/copy.js"],"names":[],"mappings":"AAAA,OAAO,CAAP,MAAc,QAAd;AACA,SAAS,KAAT,QAAsB,uBAAtB;;AAEA,SAAS,GAAT,CAAa,0BAAb,EAAyC,UAAS,IAAT,EAAe;AACtD;;AAEA,MAAM,UAAU,MAAM,GAAN,CAAU,SAAV,CAAhB;;AAED,MAAM,KAAK,mBAAX;AACC,MAAM,UAAU,IAAI,OAAJ,CAAY;AAC5B,SAAK,EADuB;AAE1B,SAAK;AACH,cAAQ,KADL;AAEH,iBAAW;AAFR,KAFqB;AAM1B,UAAM,CAAC;AACL,cAAQ,KADH;AAEL,iBAAW;AAFN,KAAD,CANoB;AAU1B,aAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAViB;AAW1B,YAAQ,KAXkB;AAY1B,YAAQ,GAZkB;AAa1B,aAAS,IAbiB;AAc1B,UAAM,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAdoB;AAe1B,eAAW;AAfe,GAAZ,CAAhB;AAiBA,UAAQ,IAAR;;AAEA,MAAI,QAAQ,QAAQ,IAAR,EAAZ;AACA,OAAK,MAAL,CAAY,MAAM,GAAlB,EACE,kEADF;AAGA,UAAQ,QAAQ,IAAR,CAAa,IAAb,CAAR;AACA,OAAK,SAAL,CAAe,MAAM,GAArB,EACE,4EADF;AAGA,OAAK,QAAL,CAAc,MAAM,GAApB,EAAyB,QAAQ,GAAjC,EACE,2EADF;AAGA,OAAK,KAAL,CAAW,EAAE,IAAF,CAAO,MAAM,GAAN,EAAP,EAAoB,KAApB,CAAX,EAAuC,EAAE,IAAF,CAAO,QAAQ,GAAR,EAAP,EAAsB,KAAtB,CAAvC,EACE,oEACA,2BAFF;AAID,CAxCD","file":"/packages/jagi:astronomy/test/modules/storage/copy.js.map","sourcesContent":["import _ from 'lodash';\nimport { Class } from 'meteor/jagi:astronomy';\n\nTinytest.add('Modules - Storage - Copy', function(test) {\n  resetDatabase();\n\n  const Storage = Class.get('Storage');\n\n\tconst id = '6tMS79Kx6WhqTEwaC';\n  const storage = new Storage({\n\t\t_id: id,\n    one: {\n      string: 'abc',\n      immutable: 'immutable',\n    },\n    many: [{\n      string: 'abc',\n      immutable: 'immutable',\n    }],\n    numbers: [1, 2, 3],\n    string: 'abc',\n    number: 123,\n    boolean: true,\n    date: new Date(2000, 0, 1, 0, 0, 0, 0),\n    immutable: 'immutable',\n  });\n  storage.save();\n\n  let clone = storage.copy();\n  test.isNull(clone._id,\n    'In the cloned document a value of the \"_id\" field should be null'\n  );\n  clone = storage.copy(true);\n  test.isNotNull(clone._id,\n    'In the saved cloned document a value of the \"_id\" field should not be null'\n  );\n  test.notEqual(clone._id, storage._id,\n    'The \"_id\" fields of the original and cloned documents should not be equal'\n  );\n  test.equal(_.omit(clone.raw(), '_id'), _.omit(storage.raw(), '_id'),\n    'All values (except the \"_id\" field) of the original and cloned ' +\n    'documents should be equal'\n  );\n});\n"]},"hash":"d44c0632184388df691f2b299c60d50e5f5c4adb"}
