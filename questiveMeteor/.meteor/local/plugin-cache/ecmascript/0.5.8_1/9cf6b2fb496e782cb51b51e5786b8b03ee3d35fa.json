{"metadata":{"usedHelpers":["classCallCheck"],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../validators/validators.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validators"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/jagi:astronomy/lib/modules/fields/Field.js","filenameRelative":"/packages/jagi:astronomy/lib/modules/fields/Field.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/jagi:astronomy/lib/modules/fields/Field.js.map","sourceFileName":"/packages/jagi:astronomy/lib/modules/fields/Field.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Field"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _;module.import('lodash',{\"default\":function(v){_=v}});var Validators;module.import('../validators/validators.js',{\"default\":function(v){Validators=v}});\n\n\n\nvar Field = function () {\n  function Field() {\n    var definition = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    _classCallCheck(this, Field);\n\n    _.defaults(definition, {\n      optional: false,\n      immutable: false,\n      transient: false\n    });\n\n    this.name = definition.name;\n    this.type = definition.type;\n    this['default'] = definition['default'];\n    this.optional = definition.optional;\n    this.immutable = definition.immutable;\n    this.transient = definition.transient;\n    this.resolve = definition.resolve;\n  }\n\n  Field.prototype.getDefault = function getDefault() {\n    if (_.isFunction(this['default'])) {\n      return this['default']();\n    }\n    return this['default'];\n  };\n\n  Field.prototype.getOptional = function getOptional(doc) {\n    if (_.isFunction(this.optional)) {\n      return this.optional(doc);\n    }\n    return this.optional;\n  };\n\n  Field.prototype.cast = function cast(value) {\n    return value;\n  };\n\n  Field.prototype.validate = function validate(args) {\n    // If a field is not optional (required) then it has to have value.\n    if (!this.getOptional(args.doc)) {\n      Validators.required(args);\n    }\n  };\n\n  Field.prototype.resolveValue = function resolveValue(rawDoc) {\n    if (this.resolve) {\n      return this.resolve(rawDoc);\n    } else {\n      return rawDoc[this.name];\n    }\n  };\n\n  return Field;\n}();\n\n;\n\nmodule.export(\"default\",exports.default=(Field));","ast":null,"map":{"version":3,"sources":["/packages/jagi:astronomy/lib/modules/fields/Field.js"],"names":[],"mappings":";AAAA,OAAO,CAAP,MAAc,QAAd;AACA,OAAO,UAAP,MAAuB,6BAAvB;;IAEM,K;AACJ,mBAA6B;AAAA,QAAjB,UAAiB,yDAAJ,EAAI;;AAAA;;AAC3B,MAAE,QAAF,CAAW,UAAX,EAAuB;AACrB,gBAAU,KADW;AAErB,iBAAW,KAFU;AAGrB,iBAAW;AAHU,KAAvB;;AAMA,SAAK,IAAL,GAAY,WAAW,IAAvB;AACA,SAAK,IAAL,GAAY,WAAW,IAAvB;AACA,sBAAe,qBAAf;AACA,SAAK,QAAL,GAAgB,WAAW,QAA3B;AACA,SAAK,SAAL,GAAiB,WAAW,SAA5B;AACA,SAAK,SAAL,GAAiB,WAAW,SAA5B;AACA,SAAK,OAAL,GAAe,WAAW,OAA1B;AACD;;kBAED,U,yBAAa;AACX,QAAI,EAAE,UAAF,CAAa,eAAb,CAAJ,EAAgC;AAC9B,aAAO,iBAAP;AACD;AACD,WAAO,eAAP;AACD,G;;kBAED,W,wBAAY,G,EAAK;AACf,QAAI,EAAE,UAAF,CAAa,KAAK,QAAlB,CAAJ,EAAiC;AAC/B,aAAO,KAAK,QAAL,CAAc,GAAd,CAAP;AACD;AACD,WAAO,KAAK,QAAZ;AACD,G;;kBAED,I,iBAAK,K,EAAO;AACV,WAAO,KAAP;AACD,G;;kBAED,Q,qBAAS,I,EAAM;;AAEb,QAAI,CAAC,KAAK,WAAL,CAAiB,KAAK,GAAtB,CAAL,EAAiC;AAC/B,iBAAW,QAAX,CAAoB,IAApB;AACD;AACF,G;;kBAED,Y,yBAAa,M,EAAQ;AACnB,QAAI,KAAK,OAAT,EAAkB;AAChB,aAAO,KAAK,OAAL,CAAa,MAAb,CAAP;AACD,KAFD,MAGK;AACH,aAAO,OAAO,KAAK,IAAZ,CAAP;AACD;AACF,G;;;;;AACF;;AAED,eAAe,KAAf","file":"/packages/jagi:astronomy/lib/modules/fields/Field.js.map","sourcesContent":["import _ from 'lodash';\nimport Validators from '../validators/validators.js';\n\nclass Field {\n  constructor(definition = {}) {\n    _.defaults(definition, {\n      optional: false,\n      immutable: false,\n      transient: false\n    });\n\n    this.name = definition.name;\n    this.type = definition.type;\n    this.default = definition.default\n    this.optional = definition.optional;\n    this.immutable = definition.immutable;\n    this.transient = definition.transient;\n    this.resolve = definition.resolve;\n  }\n\n  getDefault() {\n    if (_.isFunction(this.default)) {\n      return this.default();\n    }\n    return this.default;\n  }\n\n  getOptional(doc) {\n    if (_.isFunction(this.optional)) {\n      return this.optional(doc);\n    }\n    return this.optional;\n  }\n\n  cast(value) {\n    return value;\n  }\n\n  validate(args) {\n    // If a field is not optional (required) then it has to have value.\n    if (!this.getOptional(args.doc)) {\n      Validators.required(args);\n    }\n  }\n\n  resolveValue(rawDoc) {\n    if (this.resolve) {\n      return this.resolve(rawDoc);\n    }\n    else {\n      return rawDoc[this.name];\n    }\n  }\n};\n\nexport default Field;"]},"hash":"9cf6b2fb496e782cb51b51e5786b8b03ee3d35fa"}
