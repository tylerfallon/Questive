{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/api/tasks.js","filenameRelative":"/imports/api/tasks.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/tasks.js.map","sourceFileName":"/imports/api/tasks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"tasks"},"ignored":false,"code":"// import { Meteor } from 'meteor/meteor';\n// import { Mongo } from 'meteor/mongo';\n// import { check } from 'meteor/check';\n\n// export const Tasks = new Mongo.Collection('tasks');\n\n// if (Meteor.isServer) {\n//   // This code only runs on the server\n//   // Only publish tasks that are public or belong to the current user\n//   Meteor.publish('tasks', function tasksPublication() {\n//     return Tasks.find({\n//       $or: [\n//         { private: { $ne: true } },\n//         { owner: this.userId },\n//       ],\n//     });\n//   });\n// }\n\n// Meteor.methods({\n//   // add information to our task db\n//   'tasks.insert'(object) {\n//     let user = object.user;\n//     let title = object.title;\n//     let task = object.text;\n//     let location = object.location;\n//     check(title, String)\n//     check(task, String);\n//     check(location, String);\n\n//     // Make sure the user is logged in before inserting a task\n//     if (! this.userId) {\n//       throw new Meteor.Error('not-authorized');\n//     }\n\n//     Tasks.insert({\n//       user,\n//       title,\n//       task,\n//       location,\n//       createdAt: new Date(),\n//       owner: this.userId,\n//       username: Meteor.users.findOne(this.userId).username,\n//     });\n//   },\n//   'tasks.remove'(taskId) {\n//     check(taskId, String);\n\n//     const task = Tasks.findOne(taskId);\n//     if (task.private && task.owner !== this.userId) {\n//       // If the task is private, make sure only the owner can delete it\n//       throw new Meteor.Error('not-authorized');\n//     }\n\n//     Tasks.remove(taskId);\n//   },\n//   'tasks.setChecked'(taskId, setChecked) {\n//     check(taskId, String);\n//     check(setChecked, Boolean);\n\n//     const task = Tasks.findOne(taskId);\n//     if (task.private && task.owner !== this.userId) {\n//       // If the task is private, make sure only the owner can check it off\n//       throw new Meteor.Error('not-authorized');\n//     }\n\n//     Tasks.update(taskId, { $set: { checked: setChecked } });\n//   },\n//   'tasks.setPrivate'(taskId, setToPrivate) {\n//     check(taskId, String);\n//     check(setToPrivate, Boolean);\n\n//     const task = Tasks.findOne(taskId);\n\n//     // Make sure only the task owner can make a task private\n//     if (task.owner !== this.userId) {\n//       throw new Meteor.Error('not-authorized');\n//     }\n\n//     Tasks.update(taskId, { $set: { private: setToPrivate } });\n//   },\n\n// } ) ;","ast":null,"map":{"version":3,"sources":[],"names":[],"mappings":"","file":"/imports/api/tasks.js.map","sourcesContent":[]},"hash":"70c3cd292ba20987e2eeb1fff095605d392f37a2"}
